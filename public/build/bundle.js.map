{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../src/storage.js","../../node_modules/@vkontakte/vk-bridge/dist/index.umd.js","../../src/vnd.js","../../src/model.js","../../src/Cell.svelte","../../src/Row.svelte","../../src/Field.svelte","../../src/Keyboard.svelte","../../src/Button.svelte","../../src/Header.svelte","../../src/Game.svelte","../../src/ru.js","../../src/Popup.svelte","../../src/MessagePopup.svelte","../../src/EndGamePopup.svelte","../../src/Help.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true && boolean_attributes.has(name) ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.46.2' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","export function getTriesAverage() {\r\n    return parseInt(localStorage[\"triesSum\"] || \"0\", 10) /\r\n        parseInt(localStorage[\"tries\"] || \"1\", 10);\r\n}\r\n\r\nexport function addTryResult(n) {\r\n    setTriesAverage(`${parseInt(localStorage[\"triesSum\"] || \"0\", 10) + n}`,\r\n        `${parseInt(localStorage[\"tries\"] || \"0\", 10) + 1}`);\r\n    return getTriesAverage();\r\n}\r\n\r\nexport function setTriesAverage(sum, tires) {\r\n    localStorage[\"triesSum\"] = sum.toString();\r\n    localStorage[\"tries\"] = tires.toString();\r\n}","!function(e,n){\"object\"==typeof exports&&\"undefined\"!=typeof module?n(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],n):n((e=e||self).vkBridge={})}(this,function(e){\"use strict\";var a=function(){return(a=Object.assign||function(e){for(var n,t=1,o=arguments.length;t<o;t++)for(var r in n=arguments[t])Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r]);return e}).apply(this,arguments)};function s(){for(var e=0,n=0,t=arguments.length;n<t;n++)e+=arguments[n].length;var o=Array(e),r=0;for(n=0;n<t;n++)for(var p=arguments[n],i=0,a=p.length;i<a;i++,r++)o[r]=p[i];return o}function u(p,e){var o,r,i=(o={current:0,next:function(){return++this.current}},r={},{add:function(e,n){var t=null!=n?n:o.next();return r[t]=e,t},resolve:function(e,n,t){var o=r[e];o&&(t(n)?o.resolve(n):o.reject(n),r[e]=null)}});return e(function(e){if(e.detail&&e.detail.data&&\"object\"==typeof e.detail.data&&\"request_id\"in e.detail.data){var n=e.detail.data,t=n.request_id,o=function(e,n){var t={};for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&n.indexOf(o)<0&&(t[o]=e[o]);if(null!=e&&\"function\"==typeof Object.getOwnPropertySymbols){var r=0;for(o=Object.getOwnPropertySymbols(e);r<o.length;r++)n.indexOf(o[r])<0&&Object.prototype.propertyIsEnumerable.call(e,o[r])&&(t[o[r]]=e[o[r]])}return t}(n,[\"request_id\"]);t&&i.resolve(t,o,function(e){return!(\"error_type\"in e)})}}),function(o,r){return void 0===r&&(r={}),new Promise(function(e,n){var t=i.add({resolve:e,reject:n},r.request_id);p(o,a(a({},r),{request_id:t}))})}}var n=\"undefined\"!=typeof window,d=Boolean(n&&window.AndroidBridge),l=Boolean(n&&window.webkit&&window.webkit.messageHandlers&&window.webkit.messageHandlers.VKWebAppClose),b=n&&!d&&!l,t=b&&/(^\\?|&)vk_platform=mobile_web(&|$)/.test(location.search),c=b?\"message\":\"VKWebAppEvent\",f=s([\"VKWebAppInit\",\"VKWebAppGetCommunityAuthToken\",\"VKWebAppAddToCommunity\",\"VKWebAppAddToHomeScreenInfo\",\"VKWebAppClose\",\"VKWebAppCopyText\",\"VKWebAppCreateHash\",\"VKWebAppGetUserInfo\",\"VKWebAppSetLocation\",\"VKWebAppSendToClient\",\"VKWebAppGetClientVersion\",\"VKWebAppGetPhoneNumber\",\"VKWebAppGetEmail\",\"VKWebAppGetGroupInfo\",\"VKWebAppGetGeodata\",\"VKWebAppGetCommunityToken\",\"VKWebAppGetConfig\",\"VKWebAppGetLaunchParams\",\"VKWebAppSetTitle\",\"VKWebAppGetAuthToken\",\"VKWebAppCallAPIMethod\",\"VKWebAppJoinGroup\",\"VKWebAppLeaveGroup\",\"VKWebAppAllowMessagesFromGroup\",\"VKWebAppDenyNotifications\",\"VKWebAppAllowNotifications\",\"VKWebAppOpenPayForm\",\"VKWebAppOpenApp\",\"VKWebAppShare\",\"VKWebAppShowWallPostBox\",\"VKWebAppScroll\",\"VKWebAppShowOrderBox\",\"VKWebAppShowLeaderBoardBox\",\"VKWebAppShowInviteBox\",\"VKWebAppShowRequestBox\",\"VKWebAppAddToFavorites\",\"VKWebAppShowCommunityWidgetPreviewBox\",\"VKWebAppShowStoryBox\",\"VKWebAppStorageGet\",\"VKWebAppStorageGetKeys\",\"VKWebAppStorageSet\",\"VKWebAppFlashGetInfo\",\"VKWebAppSubscribeStoryApp\",\"VKWebAppOpenWallPost\",\"VKWebAppCheckAllowedScopes\",\"VKWebAppShowNativeAds\",\"VKWebAppRetargetingPixel\",\"VKWebAppConversionHit\"],b&&!t?[\"VKWebAppResizeWindow\",\"VKWebAppAddToMenu\",\"VKWebAppShowSubscriptionBox\",\"VKWebAppShowInstallPushBox\",\"VKWebAppGetFriends\"]:[\"VKWebAppShowImages\"]),A=n?window.AndroidBridge:void 0,m=l?window.webkit.messageHandlers:void 0;var o,r,p,i;function W(e,n){var t=n||{bubbles:!1,cancelable:!1,detail:void 0},o=document.createEvent(\"CustomEvent\");return o.initCustomEvent(e,!!t.bubbles,!!t.cancelable,t.detail),o}(o=e.EGrantedPermission||(e.EGrantedPermission={})).CAMERA=\"camera\",o.LOCATION=\"location\",o.PHOTO=\"photo\",(r=e.EGetLaunchParamsResponseLanguages||(e.EGetLaunchParamsResponseLanguages={})).RU=\"ru\",r.UK=\"uk\",r.UA=\"ua\",r.EN=\"en\",r.BE=\"be\",r.KZ=\"kz\",r.PT=\"pt\",r.ES=\"es\",(p=e.EGetLaunchParamsResponseGroupRole||(e.EGetLaunchParamsResponseGroupRole={})).ADMIN=\"admin\",p.EDITOR=\"editor\",p.MEMBER=\"member\",p.MODER=\"moder\",p.NONE=\"none\",(i=e.EGetLaunchParamsResponsePlatforms||(e.EGetLaunchParamsResponsePlatforms={})).DESKTOP_WEB=\"desktop_web\",i.MOBILE_WEB=\"mobile_web\",i.MOBILE_ANDROID=\"mobile_android\",i.MOBILE_ANDROID_MESSENGER=\"mobile_android_messenger\",i.MOBILE_IPHONE=\"mobile_iphone\",i.MOBILE_IPHONE_MESSENGER=\"mobile_iphone_messenger\",i.MOBILE_IPAD=\"mobile_ipad\",\"undefined\"==typeof window||window.CustomEvent||(window.CustomEvent=(W.prototype=Event.prototype,W));var w=function(t){var p=void 0,i=[];function e(e){i.push(e)}function n(){return l||d}function o(){return b&&window.parent!==window}function r(){return n()||o()}\"undefined\"!=typeof window&&\"addEventListener\"in window&&window.addEventListener(c,function(n){if(l||d)return s(i).map(function(e){return e.call(null,n)});if(b&&n&&n.data){var e=n.data,t=e.type,o=e.data,r=e.frameId;t&&\"SetSupportedHandlers\"===t?o.supportedHandlers:t&&\"VKWebAppSettings\"===t?p=r:s(i).map(function(e){return e({detail:{type:t,data:o}})})}});var a=u(function(e,n){A&&A[e]?A[e](JSON.stringify(n)):m&&m[e]&&\"function\"==typeof m[e].postMessage?m[e].postMessage(n):b&&parent.postMessage({handler:e,params:n,type:\"vk-connect\",webFrameId:p,connectVersion:t},\"*\")},e);return{send:a,sendPromise:a,subscribe:e,unsubscribe:function(e){var n=i.indexOf(e);-1<n&&i.splice(n,1)},supports:function(e){return d?!(!A||\"function\"!=typeof A[e]):l?!(!m||!m[e]||\"function\"!=typeof m[e].postMessage):b&&-1<f.indexOf(e)},isWebView:n,isIframe:o,isEmbedded:r,isStandalone:function(){return!r()}}}(\"2.5.3\");e.applyMiddleware=function e(){for(var o=[],n=0;n<arguments.length;n++)o[n]=arguments[n];return o.includes(void 0)||o.includes(null)?e.apply(void 0,o.filter(function(e){return\"function\"==typeof e})):function(t){if(0===o.length)return t;var e,n={subscribe:t.subscribe,send:function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];return t.send.apply(t,e)}};return e=o.filter(function(e){return\"function\"==typeof e}).map(function(e){return e(n)}).reduce(function(n,t){return function(e){return n(t(e))}})(t.send),a(a({},t),{send:e})}},e.default=w,Object.defineProperty(e,\"__esModule\",{value:!0})});\n//# sourceMappingURL=index.umd.js.map\n","import bridge from '@vkontakte/vk-bridge';\r\n\r\nfunction getParameterByName(name, url = window.location.href) {\r\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\r\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\r\n        results = regex.exec(url);\r\n    if (!results) return null;\r\n    if (!results[2]) return '';\r\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\r\n}\r\n\r\nconst vnd = {\r\n    handleVictory: function () {\r\n    },\r\n    init: function () {\r\n    },\r\n    handleNewGame: function () {\r\n    }\r\n};\r\n\r\nlet vkEnable = true;// getParameterByName(\"vk\");\r\nif (vkEnable) {\r\n    let gameNum = 0;\r\n    let token = \"\";\r\n    let userId = 0;\r\n\r\n    vnd.init = function () {\r\n        bridge.send('VKWebAppInit')\r\n            .then(r => {\r\n                bridge.send(\"VKWebAppStorageGet\", {\"keys\": [\"triesSum\", \"tries\"]})\r\n                    .then(VKWebAppStorageGet =>\r\n                        (VKWebAppStorageGet.keys || []).forEach(v => {\r\n                            switch (v.key) {\r\n                                case \"triesSum\":\r\n                                    localStorage[\"triesSum\"] = v.value;\r\n                                    break\r\n                                case \"tries\":\r\n                                    localStorage[\"tries\"] = v.value;\r\n                                    break\r\n                            }\r\n                        }))\r\n                    .catch(console.log);\r\n\r\n                bridge.send(\"VKWebAppGetAuthToken\", {\"app_id\": 8061331, \"scope\": \"\"})\r\n                    .then(VKWebAppGetAuthToken => token = VKWebAppGetAuthToken.access_token)\r\n                    .catch(console.log);\r\n\r\n                bridge.send(\"VKWebAppGetUserInfo\")\r\n                    .then(VKWebAppGetUserInfo => userId = VKWebAppGetUserInfo.id)\r\n                    .catch(console.log);\r\n            })\r\n            .catch(console.log);\r\n    }\r\n\r\n    vnd.handleVictory = async function (newResult, prevResult) {\r\n        await bridge.send(\"VKWebAppStorageSet\", {\r\n            key: \"score\",\r\n            value: newResult.toString()\r\n        });\r\n\r\n\r\n        let score = 10000 - Math.floor(newResult * 1000);\r\n        await bridge.send(\"VKWebAppCallAPIMethod\", {\r\n            \"method\": \"secure.addAppEvent\",\r\n            \"request_id\": Date.now().toString(),\r\n            \"params\": {\r\n                user_id: userId,\r\n                activity_id: 2,\r\n                value: score,\r\n                access_token: token\r\n            }\r\n        });\r\n\r\n        await bridge.send(\"VKWebAppShowLeaderBoardBox\", {user_result: score})\r\n    }\r\n\r\n    vnd.handleNewGame = async function () {\r\n        if (gameNum % 2 === 1) {\r\n            await bridge.send(\"VKWebAppShowNativeAds\", {ad_format: \"interstitial\"});\r\n        }\r\n        gameNum++;\r\n    }\r\n}\r\n\r\nexport default vnd;\r\n","import {writable} from 'svelte/store';\nimport {addTryResult, getTriesAverage} from \"./storage\";\nimport vnd from \"./vnd\";\n\nexport const model = writable({});\n\nexport const kRet = \"\\u23ce\";\nexport const kBsp = \"\\u232b\";\n\nexport const kMsgWordNotInDictionary = \"kMsgWordNotInDictionary\";\nexport const kMsgLetterMissed = \"kMsgLetterMissed\";\nexport const kMsgInsufficientLetter = \"kMsgInsufficientLetter\";\nexport const kMsgWrongLetterPosition = \"kMsgWrongLetterPosition\";\n\nexport const kScreenGame = 0;\nexport const kScreenHelp = 1;\nexport const kScreenSettings = 2;\n\nexport const kStatusUnknown = 0;\nexport const kStatusAbsent = 1;\nexport const kStatusMisplaced = 2;\nexport const kStatusCorrect = 3;\nexport const kStatusActive = 4;\n\nexport function createStore(dictionary, keyboard) {\n    return {\n        field: [],\n        status: [],\n        guessedWord: \"\",\n        victory: false,\n        defeat: false,\n        currentWord: \"\",\n        message: null,\n        messageArgs: [],\n        wordLen: 0,\n        maxTries: 0,\n        difficulty: 0,\n        currentRow: 0,\n        screen: kScreenGame,\n        absentLetters: [],\n        misplacedLetters: [],\n        correctLetters: [],\n        averageTries: 0,\n        keyboard,\n\n        init(wordLen, maxTries, difficulty) {\n            this.difficulty = difficulty;\n            const dict = dictionary[wordLen];\n            this.guessedWord = dict[Math.floor(Math.random() * dict.length)];\n            this.currentWord = \"\";\n            this.currentRow = 0;\n            this.defeat = false;\n            this.victory = false;\n            this.field = [...Array(maxTries)].map(_ => [...Array(wordLen)].map(_ => \"\"))\n            this.status = [...Array(maxTries)].map(_ => [...Array(wordLen)].map(_ => kStatusUnknown))\n            this.screen = kScreenGame;\n            this.absentLetters = [];\n            this.misplacedLetters = [];\n            this.correctLetters = [];\n            this._update();\n            vnd.handleNewGame();\n            return this;\n        },\n\n        insert(letter) {\n            if (keyboard.indexOf(letter) < 0) {\n                return this;\n            }\n            switch (letter) {\n                case kRet:\n                    this._testWord();\n                    break;\n                case kBsp:\n                    if (this.currentWord.length > 0) {\n                        this.field[this.currentRow][this.currentWord.length - 1] = \"\";\n                    }\n                    break;\n                default:\n                    if (this.currentWord.length < this.guessedWord.length) {\n                        this._iterate((c, j, i) => ((this.field[j][i] = ((c === \"_\") ? letter : c)), (c === \"_\")));\n                    }\n                    break;\n            }\n\n            this._update();\n            return this;\n        },\n\n        clearMessage() {\n            this.message = null;\n            this.messageArgs = [];\n            return this;\n        },\n\n        setScreen(screen) {\n            this.screen = screen;\n            return this;\n        },\n\n        _update: function () {\n            if (!this.victory && !this.defeat) {\n                this._fillRequiredChars();\n                this._updateCurrentWord();\n                this._placeMarker();\n            }\n            this._updateStatus();\n        },\n\n        _placeMarker() {\n            this._iterate((c, j, i) => (this.field[j][i] = (c === \"_\") ? \"\" : c) && false);\n            this._iterate((c, j, i) =>\n                ((this.field[j][i] = ((c === \"\" && j === this.currentRow) ? \"_\" : c)),\n                    (c === \"\")));\n        },\n\n        _iterate(fn) {\n            for (let j = 0; j < this.field.length; j++) {\n                for (let i = 0; i < this.field[j].length; i++) {\n                    if (fn(this.field[j][i], j, i)) {\n                        return\n                    }\n                }\n            }\n        },\n\n        _updateCurrentWord: function () {\n            this.currentWord = this.field[this.currentRow].join(\"\").replace(\"_\", \"\");\n        },\n\n        _testWord() {\n            if (this.currentWord.length !== this.guessedWord.length) {\n                return;\n            }\n\n            if (this.difficulty >= 0) {\n                if (dictionary[this.guessedWord.length].indexOf(this.currentWord) < 0) {\n                    this.message = kMsgWordNotInDictionary;\n                    this.messageArgs = [this.currentWord];\n                    this._clearRow();\n                    return;\n                }\n            }\n\n            if (this.difficulty > 0) {\n                for (let c of this.misplacedLetters) {\n                    if (this.currentWord.indexOf(c) < 0) {\n                        this.message = kMsgLetterMissed;\n                        this.messageArgs = [c];\n                        this._clearRow();\n                        return;\n                    }\n                }\n                for (let c of this.absentLetters) {\n                    if (this.currentWord.indexOf(c) >= 0) {\n                        this.message = kMsgInsufficientLetter;\n                        this.messageArgs = [c];\n                        this._clearRow();\n                        return;\n                    }\n                }\n                for (let i = 0; i < this.currentWord.length; i++) {\n                    const c = this.currentWord[i];\n                    if ((this.guessedWord[i] !== c) && (this.correctLetters.indexOf(c) >= 0)) {\n                        for (let j = 0; j < this.currentRow; j++) {\n                            if (this.field[j][i] === c) {\n                                this.message = kMsgWrongLetterPosition;\n                                this.messageArgs = [c];\n                                this._clearRow();\n                                return;\n                            }\n                        }\n                    }\n                }\n            }\n\n            this.currentRow++;\n            if (!this.victory) {\n                this.victory = this.currentWord === this.guessedWord;\n                const prev = getTriesAverage();\n                this.averageTries = addTryResult(this.currentRow);\n                vnd.handleVictory(this.averageTries, prev);\n            }\n            this.defeat = !this.victory && this.currentRow >= this.field.length;\n            this._updateLetters();\n        },\n\n        _clearRow() {\n            const row = this.field[this.currentRow];\n            for (let i = 0; i < row.length; i++) {\n                row[i] = \"\";\n            }\n            this._update();\n        },\n\n        _fillRequiredChars() {\n            if (this.difficulty > 0) {\n                for (let row of this.field) {\n                    for (let i = 0; i < row.length; i++) {\n                        if (this.guessedWord[i] === row[i]) {\n                            this.field[this.currentRow][i] = row[i];\n                        }\n                    }\n                }\n            }\n        },\n\n        _updateLetters() {\n            this.absentLetters = [];\n            this.misplacedLetters = [];\n            this.correctLetters = [];\n\n            for (let j = 0; j < this.currentRow; j++) {\n                for (let i = 0; i < this.field[j].length; i++) {\n                    const c = this.field[j][i];\n                    if (this.guessedWord[i] === c) {\n                        if (this.correctLetters.indexOf(c) < 0) {\n                            this.correctLetters.push(c);\n                        }\n                    } else if (this.guessedWord.indexOf(c) >= 0) {\n                        if (this.misplacedLetters.indexOf(c) < 0) {\n                            this.misplacedLetters.push(c);\n                        }\n                    } else {\n                        if (this.absentLetters.indexOf(c) < 0) {\n                            this.absentLetters.push(c);\n                        }\n                    }\n                }\n            }\n        },\n\n        _updateStatus() {\n            this._iterate((c, j, i) => {\n                if (j >= this.currentRow) {\n                    this.status[j][i] = kStatusUnknown;\n                } else if (this.guessedWord[i] === c) {\n                    this.status[j][i] = kStatusCorrect;\n                } else if (this.guessedWord.indexOf(c) >= 0) {\n                    this.status[j][i] = kStatusMisplaced;\n                } else {\n                    this.status[j][i] = kStatusAbsent;\n                }\n            })\n        }\n    }\n}","<script>\r\n    import {kStatusAbsent, kStatusCorrect, kStatusMisplaced, kStatusUnknown} from \"./model\";\r\n\r\n    export let value = \"\";\r\n    export let size = 0;\r\n    export let status = kStatusUnknown;\r\n</script>\r\n\r\n<div class=\"cell\" style={`width:${size}px; height:${size}px; font-size:${size*0.75}px`}>\r\n    <div class=\"inner\"\r\n         class:absent=\"{status === kStatusAbsent}\"\r\n         class:misplaced={status === kStatusMisplaced}\r\n         class:correct={status === kStatusCorrect}>\r\n        <div>{value}</div>\r\n    </div>\r\n</div>\r\n<style>\r\n    .cell {\r\n        box-sizing: border-box;\r\n        padding: 2px;\r\n        position: relative;\r\n        display: inline-flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n    }\r\n\r\n    .inner {\r\n        position: absolute;\r\n        top: 2px;\r\n        bottom: 2px;\r\n        left: 2px;\r\n        right: 2px;\r\n        border: 1px solid #3b3f41;\r\n        text-transform: uppercase;\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        justify-content: center;\r\n    }\r\n\r\n    .absent {\r\n        background-color: #3d4042;\r\n    }\r\n\r\n    .misplaced {\r\n        background-color: #8a6d34;\r\n    }\r\n\r\n    .correct {\r\n        background-color: #52642b;\r\n    }\r\n</style>","<script>\r\n    import Cell from \"./Cell.svelte\";\r\n\r\n    export let value = [];\r\n    export let index = 0;\r\n    export let size = 0;\r\n    export let model = {};\r\n</script>\r\n\r\n<div class=\"row\" style={`height:${size}px`}>\r\n    {#each value as cell, i}\r\n        <Cell value={cell} size={size} status={model.status[index][i]}/>\r\n    {/each}\r\n</div>\r\n\r\n<style>\r\n    .row {\r\n        text-align: center;\r\n    }\r\n</style>","<script>\r\n    import Row from \"./Row.svelte\";\r\n\r\n    export let model = {};\r\n\r\n    let width = 0, height = 0;\r\n    $: cellSize = Math.min(0.95 * width / model.field[0].length, height / model.field.length)\r\n\r\n</script>\r\n\r\n<div class=\"field\" bind:clientWidth={width} bind:clientHeight={height}>\r\n    {#each model.field as row, i}\r\n        <Row value={row} index={i} size={cellSize} model={model}/>\r\n    {/each}\r\n</div>\r\n<div>{model.guessedWord}</div>\r\n\r\n<style>\r\n    .field {\r\n        height: 50vh;\r\n        width: 100vw;\r\n    }\r\n</style>","<script>\r\n    import {createEventDispatcher} from 'svelte';\r\n\r\n    const dispatch = createEventDispatcher();\r\n\r\n    export let model = {};\r\n\r\n    let width = 0, height = 0;\r\n    $: keyWidth = Math.min(width / model.keyboard.split(\"|\").reduce((p, row) => Math.max(p, row.length), 0), (height / 3) * 0.75);\r\n\r\n    function handleClick(e) {\r\n        dispatch('click', {key: e.target.dataset.key});\r\n    }\r\n</script>\r\n\r\n<div class=\"keyboard\" bind:clientWidth={width} bind:clientHeight={height}>\r\n    {#each model.keyboard.split(\"|\") as row}\r\n        <div class=\"row\">\r\n            {#each row as key}\r\n                <button class=\"key\"\r\n                        class:absent=\"{model.absentLetters.indexOf(key) >= 0}\"\r\n                        class:misplaced={model.misplacedLetters.indexOf(key) >= 0}\r\n                        class:correct={model.correctLetters.indexOf(key) >= 0}\r\n                        on:click={handleClick}\r\n                        data-key=\"{key}\"\r\n                        style={`width:${keyWidth}px;font-size:${keyWidth * 0.5}px`}>\r\n                    {key}\r\n                </button>\r\n            {/each}\r\n        </div>\r\n    {/each}\r\n</div>\r\n\r\n<style>\r\n    .keyboard {\r\n        height: 30vh;\r\n        width: 100vw;\r\n    }\r\n\r\n    .row {\r\n        height: 31%;\r\n        text-align: center;\r\n    }\r\n\r\n    .key {\r\n        display: inline-flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        text-transform: uppercase;\r\n        box-sizing: border-box;\r\n        height: 100%;\r\n        vertical-align: top;\r\n        border: 1px solid #2c2c2c;\r\n        background-color: #3b3f41;\r\n        color: #b4b4b4;\r\n        border-radius: 1vw;\r\n    }\r\n\r\n    .absent {\r\n        background-color: #2c2c2c;\r\n    }\r\n\r\n    .misplaced {\r\n        background-color: #8a6d34;\r\n    }\r\n\r\n    .correct {\r\n        background-color: #52642b;\r\n    }\r\n</style>","<script>\r\n</script>\r\n\r\n<button on:click>\r\n    <slot></slot>\r\n</button>\r\n\r\n<style>\r\n    button {\r\n        font-size: 3vh;\r\n        padding: 1.5vh;\r\n        margin: 0;\r\n        border: 3px solid #264050;\r\n        background-color: rgba(86, 148, 185, 0.1);\r\n        color: #5694b9;\r\n        border-radius: 1vh;\r\n    }\r\n</style>","<script>\r\n    import Button from \"./Button.svelte\";\r\n    import {kScreenHelp, kScreenSettings, model} from \"./model\";\r\n\r\n    export let locale = {};\r\n    export let version;\r\n\r\n    function handleInfoClick() {\r\n        model.set($model.setScreen(kScreenHelp));\r\n    }\r\n\r\n    function handleSettingsClick() {\r\n        model.set($model.setScreen(kScreenSettings));\r\n    }\r\n</script>\r\n\r\n<div class=\"header\">\r\n    <Button on:click={handleInfoClick}>&#9432;</Button>\r\n    <div class=\"title\">{locale.title}<sup>{version}</sup></div>\r\n    <Button on:click={handleSettingsClick}>&#9881;</Button>\r\n</div>\r\n\r\n<style>\r\n    .header {\r\n        width: 100%;\r\n        display: flex;\r\n        justify-content: space-around;\r\n        align-items: center;\r\n    }\r\n\r\n    .title {\r\n        font-size: 2.5vh;\r\n        color: #5694b9;\r\n    }\r\n\r\n    sup {\r\n        font-size: 25%;\r\n    }\r\n</style>","<script>\r\n    import Field from \"./Field.svelte\";\r\n    import Keyboard from \"./Keyboard.svelte\";\r\n    import {kScreenGame, model} from \"./model\";\r\n    import Header from \"./Header.svelte\";\r\n\r\n    export let locale;\r\n    export let version;\r\n\r\n    function handleKeyClick(e) {\r\n        model.set($model.insert(e.detail.key))\r\n    }\r\n</script>\r\n\r\n{#if $model.screen === kScreenGame}\r\n    <div class=\"game\">\r\n        <Header {locale} {version}/>\r\n        <Field model={$model}/>\r\n        <Keyboard model={$model} on:click={handleKeyClick}/>\r\n    </div>\r\n{/if}\r\n\r\n<style>\r\n    .game {\r\n        width: 100%;\r\n        height: 100%;\r\n\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        justify-content: space-around;\r\n\r\n        background-color: #2c2c2c;\r\n        color: #b4b4b4;\r\n    }\r\n</style>","import {kBsp, kRet} from \"./model\";\r\n\r\nexport default {\r\n    keyboard: `йцукенгшщзх|фывапролджэ|${kBsp}ячсмитьбю${kRet}`,\r\n    title: \"Еще одно слово\",\r\n    victory: \"Победа\",\r\n    averageTries: \"Среднее количество попыток: \",\r\n    defeat: \"Неудача\",\r\n    guessedWord: \"Загаданное слово:\",\r\n    nextGame: \"Еще одно слово?\",\r\n    kMsgWordNotInDictionary: \"Слово «$0» не найдено в словаре.\",\r\n    kMsgLetterMissed: \"Буква «$0» должна быть использована.\",\r\n    kMsgInsufficientLetter: \"Буквы «$0» не может быть в слове.\",\r\n    kMsgWrongLetterPosition: \"Буква «$0» стоит на неправильном месте.\",\r\n    play: \"Играть\",\r\n    ok: \"OK\",\r\n    help: [\r\n        \"<p>Цель игры: угадать слово за 6 или менее попыток.</p>\",\r\n        \"<p>После очередной попытки ввода слова его буквы будут раскрашены по следующим правилам:</p>\",\r\n        \"<ul>\",\r\n        \"<li><span class='misplaced'>Желтым</span> &mdash; если эта буква присутствует в загаданном слове;</li>\",\r\n        \"<li><span class='correct'>Зеленым</span> &mdash; если эта буква присутствует и стоит на верной позиции.</li>\",\r\n        \"</ul>\",\r\n        \"<p>Используя эти подсказки, попробуйте угадать слово!</p>\"\r\n    ],\r\n    dictionary: {\r\n        5: [\r\n            \"время\",\r\n            \"жизнь\",\r\n            \"слово\",\r\n            \"место\",\r\n            \"конец\",\r\n            \"часть\",\r\n            \"город\",\r\n            \"земля\",\r\n            \"право\",\r\n            \"дверь\",\r\n            \"образ\",\r\n            \"закон\",\r\n            \"война\",\r\n            \"голос\",\r\n            \"книга\",\r\n            \"число\",\r\n            \"народ\",\r\n            \"форма\",\r\n            \"связь\",\r\n            \"улица\",\r\n            \"вечер\",\r\n            \"мысль\",\r\n            \"месяц\",\r\n            \"школа\",\r\n            \"театр\",\r\n            \"рубль\",\r\n            \"смысл\",\r\n            \"орган\",\r\n            \"рынок\",\r\n            \"семья\",\r\n            \"центр\",\r\n            \"ответ\",\r\n            \"автор\",\r\n            \"стена\",\r\n            \"совет\",\r\n            \"глава\",\r\n            \"наука\",\r\n            \"плечо\",\r\n            \"точка\",\r\n            \"палец\",\r\n            \"номер\",\r\n            \"метод\",\r\n            \"фильм\",\r\n            \"гость\",\r\n            \"кровь\",\r\n            \"район\",\r\n            \"армия\",\r\n            \"класс\",\r\n            \"герой\",\r\n            \"спина\",\r\n            \"сцена\",\r\n            \"берег\",\r\n            \"фирма\",\r\n            \"завод\",\r\n            \"песня\",\r\n            \"роман\",\r\n            \"стихи\",\r\n            \"повод\",\r\n            \"успех\",\r\n            \"выход\",\r\n            \"текст\",\r\n            \"пункт\",\r\n            \"линия\",\r\n            \"среда\",\r\n            \"волос\",\r\n            \"ветер\",\r\n            \"огонь\",\r\n            \"грудь\",\r\n            \"страх\",\r\n            \"сумма\",\r\n            \"сфера\",\r\n            \"мужик\",\r\n            \"немец\",\r\n            \"выбор\",\r\n            \"масса\",\r\n            \"слава\",\r\n            \"кухня\",\r\n            \"отдел\",\r\n            \"товар\",\r\n            \"актер\",\r\n            \"слеза\",\r\n            \"вывод\",\r\n            \"норма\",\r\n            \"рамка\",\r\n            \"прием\",\r\n            \"режим\",\r\n            \"целое\",\r\n            \"вирус\",\r\n            \"поиск\",\r\n            \"налог\",\r\n            \"доход\",\r\n            \"карта\",\r\n            \"акция\",\r\n            \"сосед\",\r\n            \"фраза\",\r\n            \"толпа\",\r\n            \"схема\",\r\n            \"волна\",\r\n            \"птица\",\r\n            \"запах\",\r\n            \"водка\",\r\n            \"поезд\",\r\n            \"адрес\",\r\n            \"лидер\",\r\n            \"стиль\",\r\n            \"весна\",\r\n            \"эпоха\",\r\n            \"запад\",\r\n            \"тайна\",\r\n            \"трава\",\r\n            \"фронт\",\r\n            \"музей\",\r\n            \"князь\",\r\n            \"сутки\",\r\n            \"судья\",\r\n            \"крыша\",\r\n            \"поток\",\r\n            \"честь\",\r\n            \"еврей\",\r\n            \"сотня\",\r\n            \"дождь\",\r\n            \"труба\",\r\n            \"осень\",\r\n            \"пьеса\",\r\n            \"черта\",\r\n            \"кусок\",\r\n            \"билет\",\r\n            \"масло\",\r\n            \"экран\",\r\n            \"канал\",\r\n            \"вагон\",\r\n            \"дурак\",\r\n            \"сезон\",\r\n            \"запас\",\r\n            \"длина\",\r\n            \"крыло\",\r\n            \"округ\",\r\n            \"доска\",\r\n            \"полет\",\r\n            \"пакет\",\r\n            \"живот\",\r\n            \"смена\",\r\n            \"порог\",\r\n            \"буква\",\r\n            \"лодка\",\r\n            \"серия\",\r\n            \"шутка\",\r\n            \"кулак\",\r\n            \"нефть\",\r\n            \"цифра\",\r\n            \"сапог\",\r\n            \"жилье\",\r\n            \"мешок\",\r\n            \"отказ\",\r\n            \"замок\",\r\n            \"диван\",\r\n            \"добро\",\r\n            \"покой\",\r\n            \"кость\",\r\n            \"спорт\",\r\n            \"майор\",\r\n            \"отдых\",\r\n            \"ручка\",\r\n            \"мечта\",\r\n            \"сюжет\",\r\n            \"рубеж\",\r\n            \"крест\",\r\n            \"взрыв\",\r\n            \"почва\",\r\n            \"заказ\",\r\n            \"штука\",\r\n            \"сумка\",\r\n            \"хвост\",\r\n            \"песок\",\r\n            \"озеро\",\r\n            \"строй\",\r\n            \"дочка\",\r\n            \"танец\",\r\n            \"набор\",\r\n            \"горло\",\r\n            \"плата\",\r\n            \"кошка\",\r\n            \"пятно\",\r\n            \"ткань\",\r\n            \"визит\",\r\n            \"океан\",\r\n            \"пауза\",\r\n            \"ствол\",\r\n            \"тепло\",\r\n            \"радио\",\r\n            \"зверь\",\r\n            \"нация\",\r\n            \"банка\",\r\n            \"метро\",\r\n            \"отчет\",\r\n            \"обмен\",\r\n            \"тоска\",\r\n            \"забор\",\r\n            \"мороз\",\r\n            \"марка\",\r\n            \"грязь\",\r\n            \"спрос\",\r\n            \"мотор\",\r\n            \"север\",\r\n            \"склад\",\r\n            \"мотив\",\r\n            \"арест\",\r\n            \"отряд\",\r\n            \"нужда\",\r\n            \"собор\",\r\n            \"салон\",\r\n            \"капля\",\r\n            \"пожар\",\r\n            \"холод\",\r\n            \"тетка\",\r\n            \"обида\",\r\n            \"вклад\",\r\n            \"гонка\",\r\n            \"рукав\",\r\n            \"туман\",\r\n            \"шофер\",\r\n            \"атака\",\r\n            \"игрок\",\r\n            \"тонна\",\r\n            \"вождь\",\r\n            \"орден\",\r\n            \"юноша\",\r\n            \"бабка\",\r\n            \"вызов\",\r\n            \"полка\",\r\n            \"бровь\",\r\n            \"удача\",\r\n            \"бытие\",\r\n            \"шапка\",\r\n            \"ложка\",\r\n            \"белок\",\r\n            \"голод\",\r\n            \"охота\",\r\n            \"домик\",\r\n            \"ветка\",\r\n            \"башня\",\r\n            \"тариф\",\r\n            \"агент\",\r\n            \"гений\",\r\n            \"сахар\",\r\n            \"благо\",\r\n            \"смесь\",\r\n            \"разум\",\r\n            \"плита\",\r\n            \"брюки\",\r\n            \"мышца\",\r\n            \"посол\",\r\n            \"пачка\",\r\n            \"шоссе\",\r\n            \"икона\",\r\n            \"халат\",\r\n            \"идеал\",\r\n            \"лента\",\r\n            \"бомба\",\r\n            \"штамм\",\r\n            \"ущерб\",\r\n            \"архив\",\r\n            \"сырье\",\r\n            \"штаны\",\r\n            \"поход\",\r\n            \"морда\",\r\n            \"проза\",\r\n            \"маска\",\r\n            \"опера\",\r\n            \"шляпа\",\r\n            \"белье\",\r\n            \"ведро\",\r\n            \"лампа\",\r\n            \"малыш\",\r\n            \"облик\",\r\n            \"копия\",\r\n            \"уголь\",\r\n            \"устав\",\r\n            \"судно\",\r\n            \"чашка\",\r\n            \"элита\",\r\n            \"ветвь\",\r\n            \"почта\",\r\n            \"палка\",\r\n            \"актив\",\r\n            \"столб\",\r\n            \"ангел\",\r\n            \"штраф\",\r\n            \"отель\",\r\n            \"мышка\",\r\n            \"ножка\",\r\n            \"стать\",\r\n            \"свеча\",\r\n            \"блюдо\",\r\n            \"грань\",\r\n            \"скала\",\r\n            \"FALSE\",\r\n            \"такси\",\r\n            \"зерно\",\r\n            \"сосна\",\r\n            \"форум\",\r\n            \"блеск\",\r\n            \"папка\",\r\n            \"степь\",\r\n            \"ковер\",\r\n            \"пламя\",\r\n            \"треть\",\r\n            \"певец\",\r\n            \"ружье\",\r\n            \"речка\",\r\n            \"финал\",\r\n            \"недра\",\r\n            \"девка\",\r\n            \"знамя\",\r\n            \"рюмка\",\r\n            \"исход\",\r\n            \"общее\",\r\n            \"звено\",\r\n            \"грипп\",\r\n            \"печка\",\r\n            \"шепот\",\r\n            \"пилот\",\r\n            \"плоть\",\r\n            \"самец\",\r\n            \"череп\",\r\n            \"бочка\",\r\n            \"гараж\",\r\n            \"сосуд\",\r\n            \"поэма\",\r\n            \"склон\",\r\n            \"лавка\",\r\n            \"бокал\",\r\n            \"кисть\",\r\n            \"идиот\",\r\n            \"койка\",\r\n            \"якорь\",\r\n            \"дрова\",\r\n            \"ворот\",\r\n            \"опора\",\r\n            \"учеба\",\r\n            \"топор\",\r\n            \"физик\",\r\n            \"барон\",\r\n            \"барак\",\r\n            \"кукла\",\r\n            \"жених\",\r\n            \"носок\",\r\n            \"обувь\",\r\n            \"намек\",\r\n            \"котел\",\r\n            \"принц\",\r\n            \"пушка\",\r\n            \"бедро\",\r\n            \"порыв\",\r\n            \"сетка\",\r\n            \"сарай\",\r\n            \"опрос\",\r\n            \"старт\",\r\n            \"шкура\",\r\n            \"драка\",\r\n            \"проба\",\r\n            \"казак\",\r\n            \"мусор\",\r\n            \"моряк\",\r\n            \"самка\",\r\n            \"туфля\",\r\n            \"химия\",\r\n            \"мадам\",\r\n            \"племя\",\r\n            \"кубок\",\r\n            \"ягода\",\r\n            \"битва\",\r\n            \"монах\",\r\n            \"грамм\",\r\n            \"дырка\",\r\n            \"побег\",\r\n            \"базар\",\r\n            \"драма\",\r\n            \"отбор\",\r\n            \"спирт\",\r\n            \"кузов\",\r\n            \"ванна\",\r\n            \"канон\",\r\n            \"рыбак\",\r\n            \"ребро\",\r\n            \"фрукт\",\r\n            \"вдова\",\r\n            \"балет\",\r\n            \"весть\",\r\n            \"казнь\",\r\n            \"навык\",\r\n            \"пение\",\r\n            \"ручей\",\r\n            \"взвод\",\r\n            \"касса\",\r\n            \"щенок\",\r\n            \"вздох\",\r\n            \"юрист\",\r\n            \"шахта\",\r\n            \"букет\",\r\n            \"тираж\",\r\n            \"шпион\",\r\n            \"жилец\",\r\n            \"тезис\",\r\n            \"залог\",\r\n            \"струя\",\r\n            \"очерк\",\r\n            \"буфет\",\r\n            \"жажда\",\r\n            \"сдача\",\r\n            \"овощи\",\r\n            \"нитка\",\r\n            \"рояль\",\r\n            \"пацан\",\r\n            \"суета\",\r\n            \"козел\",\r\n            \"наряд\",\r\n            \"тайга\",\r\n            \"петля\",\r\n            \"пласт\",\r\n            \"обман\",\r\n            \"шарик\",\r\n            \"рычаг\",\r\n            \"злоба\",\r\n            \"песнь\",\r\n            \"стадо\",\r\n            \"глина\",\r\n            \"выезд\",\r\n            \"закат\",\r\n            \"висок\",\r\n            \"обзор\",\r\n            \"завет\",\r\n            \"искра\",\r\n            \"погон\",\r\n            \"взнос\",\r\n            \"слуга\",\r\n            \"крыса\",\r\n            \"культ\",\r\n            \"сынок\",\r\n            \"довод\",\r\n            \"спуск\",\r\n            \"чайка\",\r\n            \"грунт\",\r\n            \"обыск\",\r\n            \"заряд\",\r\n            \"купол\",\r\n            \"отзыв\",\r\n            \"позор\",\r\n            \"вопль\",\r\n            \"катер\",\r\n            \"цыган\",\r\n            \"алмаз\",\r\n            \"минус\",\r\n            \"обряд\",\r\n            \"поляк\",\r\n            \"тупик\",\r\n            \"тропа\",\r\n            \"рельс\",\r\n            \"дилер\",\r\n            \"ферма\",\r\n            \"горка\",\r\n            \"пирог\",\r\n            \"сталь\",\r\n            \"табак\",\r\n            \"почка\",\r\n            \"тварь\",\r\n            \"залив\",\r\n            \"испуг\",\r\n            \"аллея\",\r\n            \"вилка\",\r\n            \"петух\",\r\n            \"фокус\",\r\n            \"показ\",\r\n            \"овраг\",\r\n            \"гроза\",\r\n            \"полюс\",\r\n            \"русло\",\r\n            \"будка\",\r\n            \"олень\",\r\n            \"рубка\",\r\n            \"рыбка\",\r\n            \"трусы\",\r\n            \"салат\",\r\n            \"банда\",\r\n            \"борец\",\r\n            \"обрыв\",\r\n            \"хохот\",\r\n            \"комар\",\r\n            \"майка\",\r\n            \"парус\",\r\n            \"перец\",\r\n            \"пират\",\r\n            \"стенд\",\r\n            \"ислам\",\r\n            \"упрек\",\r\n            \"хутор\",\r\n            \"биржа\",\r\n            \"исток\",\r\n            \"налет\",\r\n            \"фасад\",\r\n            \"истец\",\r\n            \"пытка\",\r\n            \"турок\",\r\n            \"этика\",\r\n            \"виски\",\r\n            \"обком\",\r\n            \"влага\",\r\n            \"новое\",\r\n            \"сеанс\",\r\n            \"мэрия\",\r\n            \"палач\",\r\n            \"клоун\",\r\n            \"треск\",\r\n            \"башка\",\r\n            \"сплав\",\r\n            \"ссора\",\r\n            \"медик\",\r\n            \"насос\",\r\n            \"скука\",\r\n            \"шкала\",\r\n            \"арена\",\r\n            \"имидж\",\r\n            \"ласка\",\r\n            \"титул\",\r\n            \"киоск\",\r\n            \"парта\",\r\n            \"повар\",\r\n            \"затея\",\r\n            \"парад\",\r\n            \"пучок\",\r\n            \"газон\",\r\n            \"пятка\",\r\n            \"крона\",\r\n            \"синяк\",\r\n            \"рывок\",\r\n            \"взлет\",\r\n            \"пепел\",\r\n            \"порок\",\r\n            \"седло\",\r\n            \"штурм\",\r\n            \"проем\",\r\n            \"дрожь\",\r\n            \"каюта\",\r\n            \"кишка\",\r\n            \"купец\",\r\n            \"сдвиг\",\r\n            \"штора\",\r\n            \"бремя\",\r\n            \"фюрер\",\r\n            \"нищий\",\r\n            \"пафос\",\r\n            \"кепка\",\r\n            \"миска\",\r\n            \"багаж\",\r\n            \"конек\",\r\n            \"манеж\",\r\n            \"месть\",\r\n            \"чулок\",\r\n            \"дрянь\",\r\n            \"кумир\",\r\n            \"садик\",\r\n            \"свист\",\r\n            \"азарт\",\r\n            \"геном\",\r\n            \"гудок\",\r\n            \"квота\",\r\n            \"пасть\",\r\n            \"лимон\",\r\n            \"стопа\",\r\n            \"белка\",\r\n            \"обход\",\r\n            \"ролик\",\r\n            \"слюна\",\r\n            \"оклад\",\r\n            \"бетон\",\r\n            \"камин\",\r\n            \"пульт\",\r\n            \"гамма\",\r\n            \"мерка\",\r\n            \"афиша\",\r\n            \"вахта\",\r\n            \"груда\",\r\n            \"родня\",\r\n            \"донос\",\r\n            \"особа\",\r\n            \"шорох\",\r\n            \"штамп\",\r\n            \"бланк\",\r\n            \"брюхо\",\r\n            \"груша\",\r\n            \"демон\",\r\n            \"магия\",\r\n            \"скрип\",\r\n            \"талия\",\r\n            \"тесто\",\r\n            \"вышка\",\r\n            \"ларек\",\r\n            \"сквер\",\r\n            \"вилла\",\r\n            \"лапка\",\r\n            \"кучка\",\r\n            \"пчела\",\r\n            \"скула\",\r\n            \"абзац\",\r\n            \"пасха\",\r\n            \"франк\",\r\n            \"бугор\",\r\n            \"напор\",\r\n            \"казна\",\r\n            \"копье\",\r\n            \"балка\",\r\n            \"весло\",\r\n            \"зачет\",\r\n            \"кубик\",\r\n            \"червь\",\r\n            \"щетка\",\r\n            \"досуг\",\r\n            \"вихрь\",\r\n            \"чутье\",\r\n            \"венец\",\r\n            \"косяк\",\r\n            \"нюанс\",\r\n            \"шашка\",\r\n            \"чудак\",\r\n            \"вылет\",\r\n            \"глубь\",\r\n            \"корма\",\r\n            \"пульс\",\r\n            \"шишка\",\r\n            \"акула\",\r\n            \"отсек\",\r\n            \"приют\",\r\n            \"свита\",\r\n            \"кража\",\r\n            \"лилия\",\r\n            \"факел\",\r\n            \"шланг\",\r\n            \"арбуз\",\r\n            \"венок\",\r\n            \"диета\",\r\n            \"корка\",\r\n            \"дуэль\",\r\n            \"канат\",\r\n            \"рубин\",\r\n            \"баран\",\r\n            \"холст\",\r\n            \"колея\",\r\n            \"мафия\",\r\n            \"рация\",\r\n            \"будни\",\r\n            \"износ\",\r\n            \"комок\",\r\n            \"робот\",\r\n            \"грант\",\r\n            \"аллах\",\r\n            \"глыба\",\r\n            \"изгиб\",\r\n            \"рифма\",\r\n            \"фланг\",\r\n            \"эскиз\",\r\n            \"бухта\",\r\n            \"манер\",\r\n            \"нутро\",\r\n            \"тачка\",\r\n            \"финиш\",\r\n            \"химик\",\r\n            \"аборт\",\r\n            \"вальс\",\r\n            \"сокол\",\r\n            \"черед\",\r\n            \"чукча\",\r\n            \"броня\",\r\n            \"возня\",\r\n            \"каска\",\r\n            \"салют\",\r\n            \"баржа\",\r\n            \"говно\",\r\n            \"дебют\",\r\n            \"девиз\",\r\n            \"макет\",\r\n            \"опека\",\r\n            \"подол\",\r\n            \"почет\",\r\n            \"толща\",\r\n            \"вывоз\",\r\n            \"рента\",\r\n            \"церка\",\r\n            \"каток\",\r\n            \"отрыв\",\r\n            \"уклон\",\r\n            \"шприц\",\r\n            \"веник\",\r\n            \"жулик\",\r\n            \"кофта\",\r\n            \"недуг\",\r\n            \"особь\",\r\n            \"отбой\",\r\n            \"тесть\",\r\n            \"богач\",\r\n            \"мячик\",\r\n            \"навоз\",\r\n            \"ощупь\",\r\n            \"сироп\",\r\n            \"трест\",\r\n            \"будда\",\r\n            \"видео\",\r\n            \"вишня\",\r\n            \"донор\",\r\n            \"дымок\",\r\n            \"капот\",\r\n            \"смола\",\r\n            \"сыщик\",\r\n            \"барин\",\r\n            \"выкуп\",\r\n            \"заход\",\r\n            \"отвод\",\r\n            \"сопка\",\r\n            \"банан\",\r\n            \"житие\",\r\n            \"зенит\",\r\n            \"лунка\",\r\n            \"матка\",\r\n            \"посев\",\r\n            \"устье\",\r\n            \"канун\",\r\n            \"малое\",\r\n            \"навес\",\r\n            \"парик\",\r\n            \"пресс\",\r\n            \"аванс\",\r\n            \"жилка\",\r\n            \"ордер\",\r\n            \"откос\",\r\n            \"сабля\",\r\n            \"ссуда\",\r\n            \"уклад\",\r\n            \"шторм\",\r\n            \"пешка\",\r\n            \"отход\",\r\n            \"тракт\",\r\n            \"узник\",\r\n            \"шасси\",\r\n            \"дробь\",\r\n            \"крупа\",\r\n            \"мираж\",\r\n            \"полис\",\r\n            \"улика\",\r\n            \"этнос\",\r\n            \"губка\",\r\n            \"забой\",\r\n            \"метла\",\r\n            \"руины\",\r\n            \"талон\",\r\n            \"лоток\",\r\n            \"сауна\",\r\n            \"секта\",\r\n            \"сенат\",\r\n            \"мачта\",\r\n            \"порох\",\r\n            \"прядь\",\r\n            \"тахта\",\r\n            \"шакал\",\r\n            \"горох\",\r\n            \"завал\",\r\n            \"лимит\",\r\n            \"раунд\",\r\n            \"шрифт\",\r\n            \"дымка\",\r\n            \"заезд\",\r\n            \"паста\",\r\n            \"страж\",\r\n            \"сукно\",\r\n            \"филин\",\r\n            \"гетто\",\r\n            \"молот\",\r\n            \"озноб\",\r\n            \"синод\",\r\n            \"топик\",\r\n            \"топот\",\r\n            \"бренд\",\r\n            \"гладь\",\r\n            \"графа\",\r\n            \"греза\",\r\n            \"загар\",\r\n            \"кабак\",\r\n            \"фотка\",\r\n            \"хруст\",\r\n            \"чехол\",\r\n            \"байка\",\r\n            \"валун\",\r\n            \"взмах\",\r\n            \"выпад\",\r\n            \"иудей\",\r\n            \"леший\",\r\n            \"линза\",\r\n            \"нажим\",\r\n            \"ничья\",\r\n            \"уксус\",\r\n            \"белый\",\r\n            \"брань\",\r\n            \"брэнд\",\r\n            \"бычок\",\r\n            \"вожак\",\r\n            \"кефир\",\r\n            \"кивок\",\r\n            \"мойка\",\r\n            \"наезд\",\r\n            \"носик\",\r\n            \"порча\",\r\n            \"хорек\",\r\n            \"штрих\",\r\n            \"атлас\",\r\n            \"бутик\",\r\n            \"виток\",\r\n            \"лавра\",\r\n            \"мятеж\",\r\n            \"сосок\",\r\n            \"трата\",\r\n            \"булат\",\r\n            \"нотка\",\r\n            \"созыв\",\r\n            \"устой\",\r\n            \"ворох\",\r\n            \"вычет\",\r\n            \"дозор\",\r\n            \"мякиш\",\r\n            \"рыжик\",\r\n            \"фишка\",\r\n            \"шейка\",\r\n            \"шпага\",\r\n            \"кудри\",\r\n            \"лопух\",\r\n            \"отчим\",\r\n            \"разок\",\r\n            \"слива\",\r\n            \"шорты\",\r\n            \"щепка\",\r\n            \"яичко\",\r\n            \"ловля\",\r\n            \"мытье\",\r\n            \"полог\",\r\n            \"помин\",\r\n            \"пудра\",\r\n            \"смута\",\r\n            \"акциз\",\r\n            \"батон\",\r\n            \"ворон\",\r\n            \"врата\",\r\n            \"галка\",\r\n            \"грива\",\r\n            \"денек\",\r\n            \"дубль\",\r\n            \"запой\",\r\n            \"кабан\",\r\n            \"камыш\",\r\n            \"кочка\",\r\n            \"лакей\",\r\n            \"наган\",\r\n            \"немка\",\r\n            \"пурга\",\r\n            \"флора\",\r\n            \"чугун\",\r\n            \"шалаш\",\r\n            \"шаман\",\r\n            \"шатер\",\r\n            \"ширма\",\r\n            \"шпана\",\r\n            \"альфа\",\r\n            \"вздор\",\r\n            \"гайка\",\r\n            \"гряда\",\r\n            \"комод\",\r\n            \"метан\",\r\n            \"милая\",\r\n            \"осина\",\r\n            \"отпор\",\r\n            \"резон\",\r\n            \"смета\",\r\n            \"счеты\",\r\n            \"тенор\",\r\n            \"топка\",\r\n            \"шайка\",\r\n            \"гусар\",\r\n            \"досье\",\r\n            \"курок\",\r\n            \"рожок\",\r\n            \"выдох\",\r\n            \"древо\",\r\n            \"жилет\",\r\n            \"лицей\",\r\n            \"масть\",\r\n            \"охват\",\r\n            \"питье\",\r\n            \"тыква\",\r\n            \"фанат\",\r\n            \"чрево\",\r\n            \"амбар\",\r\n            \"вотум\",\r\n            \"детка\",\r\n            \"мушка\",\r\n            \"ореол\",\r\n            \"санки\",\r\n            \"титан\",\r\n            \"фауна\",\r\n            \"часик\",\r\n            \"алкаш\",\r\n            \"берет\",\r\n            \"булка\",\r\n            \"варяг\",\r\n            \"конус\",\r\n            \"лазер\",\r\n            \"лапша\",\r\n            \"сапер\",\r\n            \"танго\",\r\n            \"хобби\",\r\n            \"шайба\",\r\n            \"келья\",\r\n            \"сушка\",\r\n            \"тиран\",\r\n            \"бутон\",\r\n            \"догма\",\r\n            \"запор\",\r\n            \"обвал\",\r\n            \"окрик\",\r\n            \"смотр\",\r\n            \"сотка\",\r\n            \"укроп\",\r\n            \"флюид\",\r\n            \"шлюха\",\r\n            \"главк\",\r\n            \"гольф\",\r\n            \"днище\",\r\n            \"ересь\",\r\n            \"томик\",\r\n            \"тумба\",\r\n            \"умник\",\r\n            \"фужер\",\r\n            \"иврит\",\r\n            \"казах\",\r\n            \"лютик\",\r\n            \"мания\",\r\n            \"отрок\",\r\n            \"паром\",\r\n            \"пинок\",\r\n            \"фигня\",\r\n            \"хмель\",\r\n            \"чужак\",\r\n            \"шпиль\",\r\n            \"эмаль\",\r\n            \"блоха\",\r\n            \"вырез\",\r\n            \"глушь\",\r\n            \"горец\",\r\n            \"житье\",\r\n            \"калий\",\r\n            \"краса\",\r\n            \"ладья\",\r\n            \"мамка\",\r\n            \"ножик\",\r\n            \"норка\",\r\n            \"оксид\",\r\n            \"рулон\",\r\n            \"сучок\",\r\n            \"тонус\",\r\n            \"уступ\",\r\n            \"эгида\",\r\n            \"вожжа\",\r\n            \"кучер\",\r\n            \"накал\",\r\n            \"обрез\",\r\n            \"пайка\",\r\n            \"потоп\",\r\n            \"торец\",\r\n            \"узбек\",\r\n            \"шубка\",\r\n            \"ярлык\",\r\n            \"буран\",\r\n            \"волхв\",\r\n            \"газик\",\r\n            \"клерк\",\r\n            \"кроха\",\r\n            \"ослик\",\r\n            \"отвар\",\r\n            \"отлет\",\r\n            \"пашня\",\r\n            \"пенек\",\r\n            \"пупок\",\r\n            \"чешуя\",\r\n            \"вынос\",\r\n            \"декан\",\r\n            \"зажим\",\r\n            \"зазор\",\r\n            \"засов\",\r\n            \"леска\",\r\n            \"ляжка\",\r\n            \"мазут\",\r\n            \"масон\",\r\n            \"молва\",\r\n            \"мумия\",\r\n            \"обруч\",\r\n            \"отлив\",\r\n            \"плеть\",\r\n            \"посох\",\r\n            \"рознь\",\r\n            \"склеп\",\r\n            \"тезка\",\r\n            \"томат\",\r\n            \"тулуп\",\r\n            \"шпала\",\r\n            \"буфер\",\r\n            \"вогул\",\r\n            \"декор\",\r\n            \"колос\",\r\n            \"падла\",\r\n            \"полив\",\r\n            \"пятак\",\r\n            \"рвота\",\r\n            \"сброс\",\r\n            \"сифон\",\r\n            \"спазм\",\r\n            \"табор\",\r\n            \"телец\",\r\n            \"тюбик\",\r\n            \"хвала\",\r\n            \"шитье\",\r\n            \"астра\",\r\n            \"бачок\",\r\n            \"варка\",\r\n            \"зайка\",\r\n            \"зелье\",\r\n            \"лямка\",\r\n            \"отток\",\r\n            \"скоба\",\r\n            \"ареал\",\r\n            \"аудит\",\r\n            \"базис\",\r\n            \"дамба\",\r\n            \"делец\",\r\n            \"егерь\",\r\n            \"жучок\",\r\n            \"завуч\",\r\n            \"зубец\",\r\n            \"метка\",\r\n            \"набег\",\r\n            \"ножны\",\r\n            \"опись\",\r\n            \"ртуть\",\r\n            \"чувак\",\r\n            \"аршин\",\r\n            \"басня\",\r\n            \"говор\",\r\n            \"дебри\",\r\n            \"десна\",\r\n            \"жердь\",\r\n            \"лотос\",\r\n            \"осада\",\r\n            \"отвал\",\r\n            \"перст\",\r\n            \"спица\",\r\n            \"столп\",\r\n            \"такса\",\r\n            \"транс\",\r\n            \"убыль\",\r\n            \"ангар\",\r\n            \"афера\",\r\n            \"вираж\",\r\n            \"гонец\",\r\n            \"индус\",\r\n            \"казус\",\r\n            \"кореш\",\r\n            \"лиана\",\r\n            \"окунь\",\r\n            \"рубец\",\r\n            \"седан\",\r\n            \"траур\",\r\n            \"фасон\",\r\n            \"фляга\",\r\n            \"челка\",\r\n            \"шлейф\",\r\n            \"шмель\",\r\n            \"щечка\",\r\n            \"юнкер\",\r\n            \"бидон\",\r\n            \"бойня\",\r\n            \"валик\",\r\n            \"жетон\",\r\n            \"загон\",\r\n            \"кулик\",\r\n            \"плеск\",\r\n            \"тембр\",\r\n            \"турне\",\r\n            \"хобот\",\r\n            \"чулан\",\r\n            \"шельф\",\r\n            \"шквал\",\r\n            \"бирюк\",\r\n            \"каста\",\r\n            \"котик\",\r\n            \"ликер\",\r\n            \"оазис\",\r\n            \"пижон\",\r\n            \"пицца\",\r\n            \"побои\",\r\n            \"смерч\",\r\n            \"стужа\",\r\n            \"щиток\",\r\n            \"бисер\",\r\n            \"вояка\",\r\n            \"годик\",\r\n            \"жесть\",\r\n            \"кадка\",\r\n            \"короб\",\r\n            \"латыш\",\r\n            \"оплот\",\r\n            \"панно\",\r\n            \"песец\",\r\n            \"посад\",\r\n            \"прима\",\r\n            \"рафик\",\r\n            \"хиппи\",\r\n            \"циник\",\r\n            \"аркан\",\r\n            \"дебил\",\r\n            \"джинн\",\r\n            \"дятел\",\r\n            \"замер\",\r\n            \"изыск\",\r\n            \"колба\",\r\n            \"кредо\",\r\n            \"левша\",\r\n            \"лесть\",\r\n            \"локон\",\r\n            \"ломка\",\r\n            \"наказ\",\r\n            \"покои\",\r\n            \"понос\",\r\n            \"родич\",\r\n            \"совок\",\r\n            \"тазик\",\r\n            \"талиб\",\r\n            \"тапка\",\r\n            \"тушка\",\r\n            \"хохол\",\r\n            \"бочок\",\r\n            \"гарем\",\r\n            \"гниль\",\r\n            \"изгой\",\r\n            \"копна\",\r\n            \"ладан\",\r\n            \"литье\",\r\n            \"пивко\",\r\n            \"плато\",\r\n            \"плаха\",\r\n            \"пойма\",\r\n            \"ранка\",\r\n            \"резец\",\r\n            \"сопли\",\r\n            \"судак\",\r\n            \"табло\",\r\n            \"терем\",\r\n            \"тоник\",\r\n            \"шажок\",\r\n            \"бубен\",\r\n            \"гамак\",\r\n            \"жабра\",\r\n            \"кадет\",\r\n            \"кулек\",\r\n            \"кураж\",\r\n            \"остов\",\r\n            \"откат\",\r\n            \"падеж\",\r\n            \"пушок\",\r\n            \"сучка\",\r\n            \"тягач\",\r\n            \"уазик\",\r\n            \"угода\",\r\n            \"фугас\",\r\n            \"чурка\",\r\n            \"адепт\",\r\n            \"астма\",\r\n            \"бронь\",\r\n            \"вьюга\",\r\n            \"задор\",\r\n            \"кварц\",\r\n            \"лесок\",\r\n            \"мазок\",\r\n            \"марля\",\r\n            \"нарта\",\r\n            \"пахан\",\r\n            \"помет\",\r\n            \"сонет\",\r\n            \"табун\",\r\n            \"телка\",\r\n            \"хлыст\",\r\n            \"абвер\",\r\n            \"брешь\",\r\n            \"гнида\",\r\n            \"давка\",\r\n            \"дрозд\",\r\n            \"кадык\",\r\n            \"кобра\",\r\n            \"круиз\",\r\n            \"кузен\",\r\n            \"кушак\",\r\n            \"кювет\",\r\n            \"лихва\",\r\n            \"маляр\",\r\n            \"нахал\",\r\n            \"пикет\",\r\n            \"попка\",\r\n            \"почин\",\r\n            \"радар\",\r\n            \"рокот\",\r\n            \"румын\",\r\n            \"рупор\",\r\n            \"самбо\",\r\n            \"сачок\",\r\n            \"трель\",\r\n            \"хакер\",\r\n            \"слизь\",\r\n            \"снедь\",\r\n            \"фикус\",\r\n            \"дупло\",\r\n            \"кисет\",\r\n            \"чернь\",\r\n            \"кольт\",\r\n            \"ясень\",\r\n            \"бобер\",\r\n            \"холуй\",\r\n            \"дзюдо\",\r\n            \"опала\"\r\n        ],\r\n        6: [\r\n            \"работа\",\r\n            \"вопрос\",\r\n            \"страна\",\r\n            \"случай\",\r\n            \"голова\",\r\n            \"деньги\",\r\n            \"машина\",\r\n            \"власть\",\r\n            \"тысяча\",\r\n            \"статья\",\r\n            \"группа\",\r\n            \"начало\",\r\n            \"минута\",\r\n            \"дорога\",\r\n            \"любовь\",\r\n            \"взгляд\",\r\n            \"момент\",\r\n            \"письмо\",\r\n            \"помощь\",\r\n            \"смерть\",\r\n            \"задача\",\r\n            \"партия\",\r\n            \"сердце\",\r\n            \"неделя\",\r\n            \"газета\",\r\n            \"основа\",\r\n            \"данные\",\r\n            \"мнение\",\r\n            \"проект\",\r\n            \"служба\",\r\n            \"судьба\",\r\n            \"состав\",\r\n            \"период\",\r\n            \"пример\",\r\n            \"воздух\",\r\n            \"борьба\",\r\n            \"размер\",\r\n            \"доллар\",\r\n            \"музыка\",\r\n            \"правда\",\r\n            \"память\",\r\n            \"дерево\",\r\n            \"хозяин\",\r\n            \"солнце\",\r\n            \"способ\",\r\n            \"журнал\",\r\n            \"оценка\",\r\n            \"регион\",\r\n            \"анализ\",\r\n            \"бумага\",\r\n            \"модель\",\r\n            \"старик\",\r\n            \"ребята\",\r\n            \"знание\",\r\n            \"защита\",\r\n            \"доктор\",\r\n            \"солдат\",\r\n            \"оружие\",\r\n            \"парень\",\r\n            \"зрение\",\r\n            \"услуга\",\r\n            \"бизнес\",\r\n            \"собака\",\r\n            \"камень\",\r\n            \"здание\",\r\n            \"бюджет\",\r\n            \"победа\",\r\n            \"звезда\",\r\n            \"сестра\",\r\n            \"карман\",\r\n            \"войско\",\r\n            \"офицер\",\r\n            \"предел\",\r\n            \"выборы\",\r\n            \"ученый\",\r\n            \"теория\",\r\n            \"клетка\",\r\n            \"расчет\",\r\n            \"ошибка\",\r\n            \"колено\",\r\n            \"стекло\",\r\n            \"высота\",\r\n            \"трубка\",\r\n            \"мастер\",\r\n            \"подход\",\r\n            \"ресурс\",\r\n            \"улыбка\",\r\n            \"артист\",\r\n            \"фигура\",\r\n            \"список\",\r\n            \"усилие\",\r\n            \"остров\",\r\n            \"житель\",\r\n            \"одежда\",\r\n            \"кресло\",\r\n            \"ладонь\",\r\n            \"цветок\",\r\n            \"январь\",\r\n            \"фактор\",\r\n            \"август\",\r\n            \"охрана\",\r\n            \"расход\",\r\n            \"родина\",\r\n            \"лагерь\",\r\n            \"клиент\",\r\n            \"беседа\",\r\n            \"апрель\",\r\n            \"кодекс\",\r\n            \"костюм\",\r\n            \"лошадь\",\r\n            \"ученик\",\r\n            \"приказ\",\r\n            \"жертва\",\r\n            \"восток\",\r\n            \"польза\",\r\n            \"звонок\",\r\n            \"деталь\",\r\n            \"тишина\",\r\n            \"тюрьма\",\r\n            \"книжка\",\r\n            \"угроза\",\r\n            \"стакан\",\r\n            \"запись\",\r\n            \"палата\",\r\n            \"ноябрь\",\r\n            \"потеря\",\r\n            \"колесо\",\r\n            \"камера\",\r\n            \"оплата\",\r\n            \"эффект\",\r\n            \"доклад\",\r\n            \"платье\",\r\n            \"ремонт\",\r\n            \"корень\",\r\n            \"ракета\",\r\n            \"выпуск\",\r\n            \"корпус\",\r\n            \"талант\",\r\n            \"полоса\",\r\n            \"дворец\",\r\n            \"забота\",\r\n            \"столик\",\r\n            \"печать\",\r\n            \"кольцо\",\r\n            \"ворота\",\r\n            \"дружба\",\r\n            \"кредит\",\r\n            \"металл\",\r\n            \"молоко\",\r\n            \"поэзия\",\r\n            \"краска\",\r\n            \"сигнал\",\r\n            \"золото\",\r\n            \"премия\",\r\n            \"король\",\r\n            \"чтение\",\r\n            \"ставка\",\r\n            \"статус\",\r\n            \"сказка\",\r\n            \"версия\",\r\n            \"пенсия\",\r\n            \"кризис\",\r\n            \"яблоко\",\r\n            \"сделка\",\r\n            \"строка\",\r\n            \"погода\",\r\n            \"пресса\",\r\n            \"вокзал\",\r\n            \"гибель\",\r\n            \"могила\",\r\n            \"стенка\",\r\n            \"логика\",\r\n            \"термин\",\r\n            \"прибор\",\r\n            \"оборот\",\r\n            \"секрет\",\r\n            \"пальто\",\r\n            \"порода\",\r\n            \"мебель\",\r\n            \"костер\",\r\n            \"стадия\",\r\n            \"звание\",\r\n            \"раздел\",\r\n            \"сектор\",\r\n            \"учение\",\r\n            \"символ\",\r\n            \"привет\",\r\n            \"добыча\",\r\n            \"корова\",\r\n            \"отпуск\",\r\n            \"эпизод\",\r\n            \"облако\",\r\n            \"бандит\",\r\n            \"куртка\",\r\n            \"физика\",\r\n            \"приход\",\r\n            \"колхоз\",\r\n            \"платок\",\r\n            \"локоть\",\r\n            \"жалоба\",\r\n            \"мелочь\",\r\n            \"умение\",\r\n            \"лекция\",\r\n            \"подвиг\",\r\n            \"летчик\",\r\n            \"одеяло\",\r\n            \"диалог\",\r\n            \"пиджак\",\r\n            \"манера\",\r\n            \"студия\",\r\n            \"тренер\",\r\n            \"коньяк\",\r\n            \"юность\",\r\n            \"замена\",\r\n            \"приезд\",\r\n            \"аспект\",\r\n            \"туалет\",\r\n            \"пленка\",\r\n            \"экипаж\",\r\n            \"ссылка\",\r\n            \"убийца\",\r\n            \"призыв\",\r\n            \"натура\",\r\n            \"доступ\",\r\n            \"подвал\",\r\n            \"космос\",\r\n            \"курица\",\r\n            \"девица\",\r\n            \"кнопка\",\r\n            \"фонарь\",\r\n            \"трасса\",\r\n            \"градус\",\r\n            \"запрос\",\r\n            \"кабина\",\r\n            \"медаль\",\r\n            \"уголок\",\r\n            \"разрыв\",\r\n            \"орудие\",\r\n            \"эмоция\",\r\n            \"борода\",\r\n            \"критик\",\r\n            \"посуда\",\r\n            \"боевик\",\r\n            \"супруг\",\r\n            \"крышка\",\r\n            \"платеж\",\r\n            \"авария\",\r\n            \"валюта\",\r\n            \"стойка\",\r\n            \"листок\",\r\n            \"предок\",\r\n            \"турнир\",\r\n            \"льгота\",\r\n            \"железо\",\r\n            \"дверца\",\r\n            \"огонек\",\r\n            \"ремень\",\r\n            \"балкон\",\r\n            \"огород\",\r\n            \"баланс\",\r\n            \"юбилей\",\r\n            \"кирпич\",\r\n            \"аренда\",\r\n            \"допрос\",\r\n            \"футбол\",\r\n            \"запрет\",\r\n            \"спектр\",\r\n            \"турист\",\r\n            \"молния\",\r\n            \"подача\",\r\n            \"глазок\",\r\n            \"провод\",\r\n            \"кружка\",\r\n            \"акцент\",\r\n            \"ванная\",\r\n            \"заявка\",\r\n            \"обычай\",\r\n            \"резерв\",\r\n            \"диплом\",\r\n            \"окошко\",\r\n            \"шинель\",\r\n            \"ноготь\",\r\n            \"филиал\",\r\n            \"болото\",\r\n            \"лозунг\",\r\n            \"патрон\",\r\n            \"ширина\",\r\n            \"снаряд\",\r\n            \"зелень\",\r\n            \"пейзаж\",\r\n            \"гвоздь\",\r\n            \"проход\",\r\n            \"альбом\",\r\n            \"святой\",\r\n            \"снимок\",\r\n            \"японец\",\r\n            \"ерунда\",\r\n            \"свинья\",\r\n            \"родные\",\r\n            \"аромат\",\r\n            \"тряпка\",\r\n            \"отмена\",\r\n            \"провал\",\r\n            \"разряд\",\r\n            \"бревно\",\r\n            \"климат\",\r\n            \"синтез\",\r\n            \"спинка\",\r\n            \"график\",\r\n            \"урожай\",\r\n            \"барьер\",\r\n            \"захват\",\r\n            \"надзор\",\r\n            \"гитара\",\r\n            \"матрос\",\r\n            \"развод\",\r\n            \"хирург\",\r\n            \"бензин\",\r\n            \"миссия\",\r\n            \"грохот\",\r\n            \"выдача\",\r\n            \"взятка\",\r\n            \"община\",\r\n            \"цитата\",\r\n            \"чайник\",\r\n            \"пророк\",\r\n            \"пробка\",\r\n            \"рубаха\",\r\n            \"сессия\",\r\n            \"убыток\",\r\n            \"ярость\",\r\n            \"прыжок\",\r\n            \"тройка\",\r\n            \"гнездо\",\r\n            \"ирония\",\r\n            \"стрела\",\r\n            \"выгода\",\r\n            \"дизайн\",\r\n            \"рецепт\",\r\n            \"китаец\",\r\n            \"мораль\",\r\n            \"палуба\",\r\n            \"береза\",\r\n            \"пещера\",\r\n            \"спичка\",\r\n            \"плакат\",\r\n            \"кружок\",\r\n            \"кончик\",\r\n            \"поляна\",\r\n            \"легкое\",\r\n            \"травма\",\r\n            \"лопата\",\r\n            \"пустяк\",\r\n            \"джинсы\",\r\n            \"печаль\",\r\n            \"дьявол\",\r\n            \"отходы\",\r\n            \"печень\",\r\n            \"долина\",\r\n            \"огурец\",\r\n            \"рыцарь\",\r\n            \"стихия\",\r\n            \"горечь\",\r\n            \"ограда\",\r\n            \"толчок\",\r\n            \"фонтан\",\r\n            \"индекс\",\r\n            \"маршал\",\r\n            \"телега\",\r\n            \"крючок\",\r\n            \"деяние\",\r\n            \"монета\",\r\n            \"станок\",\r\n            \"злость\",\r\n            \"кошмар\",\r\n            \"распад\",\r\n            \"рюкзак\",\r\n            \"жилище\",\r\n            \"пленум\",\r\n            \"чертеж\",\r\n            \"эшелон\",\r\n            \"порция\",\r\n            \"секция\",\r\n            \"старец\",\r\n            \"шерсть\",\r\n            \"размах\",\r\n            \"труппа\",\r\n            \"уплата\",\r\n            \"фашист\",\r\n            \"дракон\",\r\n            \"импорт\",\r\n            \"панель\",\r\n            \"досада\",\r\n            \"модуль\",\r\n            \"певица\",\r\n            \"внучка\",\r\n            \"митинг\",\r\n            \"горшок\",\r\n            \"каблук\",\r\n            \"осмотр\",\r\n            \"паника\",\r\n            \"почерк\",\r\n            \"рекорд\",\r\n            \"мундир\",\r\n            \"пузырь\",\r\n            \"статуя\",\r\n            \"бездна\",\r\n            \"связка\",\r\n            \"аналог\",\r\n            \"знаток\",\r\n            \"творец\",\r\n            \"глоток\",\r\n            \"гонщик\",\r\n            \"проезд\",\r\n            \"утрата\",\r\n            \"верста\",\r\n            \"стража\",\r\n            \"кличка\",\r\n            \"формат\",\r\n            \"контур\",\r\n            \"маневр\",\r\n            \"разрез\",\r\n            \"теракт\",\r\n            \"аптека\",\r\n            \"кулиса\",\r\n            \"орбита\",\r\n            \"свитер\",\r\n            \"грусть\",\r\n            \"лебедь\",\r\n            \"первое\",\r\n            \"ритуал\",\r\n            \"террор\",\r\n            \"пионер\",\r\n            \"братец\",\r\n            \"железа\",\r\n            \"прорыв\",\r\n            \"тормоз\",\r\n            \"дерьмо\",\r\n            \"сервис\",\r\n            \"скамья\",\r\n            \"фильтр\",\r\n            \"мистер\",\r\n            \"пехота\",\r\n            \"участь\",\r\n            \"анкета\",\r\n            \"райком\",\r\n            \"сторож\",\r\n            \"грузин\",\r\n            \"пальма\",\r\n            \"шедевр\",\r\n            \"листва\",\r\n            \"совхоз\",\r\n            \"сустав\",\r\n            \"уборка\",\r\n            \"покров\",\r\n            \"разгар\",\r\n            \"водоем\",\r\n            \"измена\",\r\n            \"подбор\",\r\n            \"скидка\",\r\n            \"струна\",\r\n            \"библия\",\r\n            \"голубь\",\r\n            \"запуск\",\r\n            \"сияние\",\r\n            \"чепуха\",\r\n            \"земляк\",\r\n            \"крошка\",\r\n            \"чердак\",\r\n            \"розыск\",\r\n            \"массив\",\r\n            \"поклон\",\r\n            \"банкир\",\r\n            \"нищета\",\r\n            \"помеха\",\r\n            \"сериал\",\r\n            \"вектор\",\r\n            \"кривая\",\r\n            \"курорт\",\r\n            \"птичка\",\r\n            \"гигант\",\r\n            \"купюра\",\r\n            \"силуэт\",\r\n            \"фашизм\",\r\n            \"ворона\",\r\n            \"глагол\",\r\n            \"ноздря\",\r\n            \"динамо\",\r\n            \"снятие\",\r\n            \"сундук\",\r\n            \"свалка\",\r\n            \"стопка\",\r\n            \"стресс\",\r\n            \"теннис\",\r\n            \"мамаша\",\r\n            \"бульон\",\r\n            \"чекист\",\r\n            \"ведьма\",\r\n            \"ректор\",\r\n            \"сирота\",\r\n            \"клапан\",\r\n            \"мостик\",\r\n            \"клятва\",\r\n            \"кролик\",\r\n            \"монтаж\",\r\n            \"окурок\",\r\n            \"разбор\",\r\n            \"дядька\",\r\n            \"отклик\",\r\n            \"троица\",\r\n            \"казино\",\r\n            \"хоккей\",\r\n            \"вырост\",\r\n            \"дефект\",\r\n            \"поднос\",\r\n            \"банкет\",\r\n            \"обилие\",\r\n            \"плитка\",\r\n            \"гектар\",\r\n            \"погоня\",\r\n            \"лезвие\",\r\n            \"романс\",\r\n            \"скорбь\",\r\n            \"доцент\",\r\n            \"приток\",\r\n            \"прокат\",\r\n            \"хребет\",\r\n            \"сугроб\",\r\n            \"убитый\",\r\n            \"ущелье\",\r\n            \"ячейка\",\r\n            \"забава\",\r\n            \"зонтик\",\r\n            \"царица\",\r\n            \"выступ\",\r\n            \"притча\",\r\n            \"развал\",\r\n            \"боярин\",\r\n            \"выброс\",\r\n            \"дружка\",\r\n            \"нарком\",\r\n            \"стимул\",\r\n            \"значок\",\r\n            \"клочок\",\r\n            \"копыто\",\r\n            \"пассаж\",\r\n            \"перила\",\r\n            \"перрон\",\r\n            \"реестр\",\r\n            \"скелет\",\r\n            \"чистка\",\r\n            \"умница\",\r\n            \"широта\",\r\n            \"сборка\",\r\n            \"индеец\",\r\n            \"подлец\",\r\n            \"дружок\",\r\n            \"конунг\",\r\n            \"штучка\",\r\n            \"альянс\",\r\n            \"злодей\",\r\n            \"зрачок\",\r\n            \"конвой\",\r\n            \"мишень\",\r\n            \"мудрец\",\r\n            \"радиус\",\r\n            \"трепет\",\r\n            \"яблоня\",\r\n            \"датчик\",\r\n            \"патент\",\r\n            \"тундра\",\r\n            \"шашлык\",\r\n            \"зараза\",\r\n            \"люстра\",\r\n            \"папаша\",\r\n            \"засада\",\r\n            \"кабель\",\r\n            \"лесхоз\",\r\n            \"солома\",\r\n            \"тополь\",\r\n            \"гормон\",\r\n            \"причал\",\r\n            \"резина\",\r\n            \"глотка\",\r\n            \"пастух\",\r\n            \"геолог\",\r\n            \"кромка\",\r\n            \"массаж\",\r\n            \"привод\",\r\n            \"рельеф\",\r\n            \"рудник\",\r\n            \"ступня\",\r\n            \"двойка\",\r\n            \"иголка\",\r\n            \"карета\",\r\n            \"корона\",\r\n            \"хищник\",\r\n            \"второе\",\r\n            \"караул\",\r\n            \"прицел\",\r\n            \"триумф\",\r\n            \"алтарь\",\r\n            \"саммит\",\r\n            \"спикер\",\r\n            \"абсурд\",\r\n            \"вранье\",\r\n            \"имение\",\r\n            \"помада\",\r\n            \"рапорт\",\r\n            \"брызги\",\r\n            \"раскол\",\r\n            \"гостья\",\r\n            \"монстр\",\r\n            \"отсчет\",\r\n            \"пазуха\",\r\n            \"прутик\",\r\n            \"туризм\",\r\n            \"дворик\",\r\n            \"кашель\",\r\n            \"удочка\",\r\n            \"улочка\",\r\n            \"калина\",\r\n            \"канава\",\r\n            \"каркас\",\r\n            \"клумба\",\r\n            \"солист\",\r\n            \"травка\",\r\n            \"унитаз\",\r\n            \"китель\",\r\n            \"педаль\",\r\n            \"реалия\",\r\n            \"сумрак\",\r\n            \"фермер\",\r\n            \"бросок\",\r\n            \"затвор\",\r\n            \"свечка\",\r\n            \"чеснок\",\r\n            \"легион\",\r\n            \"отдача\",\r\n            \"паркет\",\r\n            \"планка\",\r\n            \"сатира\",\r\n            \"коготь\",\r\n            \"боязнь\",\r\n            \"бритва\",\r\n            \"изолят\",\r\n            \"карьер\",\r\n            \"лирика\",\r\n            \"оратор\",\r\n            \"сирень\",\r\n            \"строфа\",\r\n            \"шляпка\",\r\n            \"богиня\",\r\n            \"грядка\",\r\n            \"колпак\",\r\n            \"мрамор\",\r\n            \"пьяный\",\r\n            \"радуга\",\r\n            \"шахтер\",\r\n            \"ключик\",\r\n            \"комбат\",\r\n            \"матрас\",\r\n            \"погреб\",\r\n            \"техник\",\r\n            \"футляр\",\r\n            \"череда\",\r\n            \"кобура\",\r\n            \"личико\",\r\n            \"синева\",\r\n            \"башмак\",\r\n            \"метель\",\r\n            \"сводка\",\r\n            \"утечка\",\r\n            \"калибр\",\r\n            \"стирка\",\r\n            \"третья\",\r\n            \"дюжина\",\r\n            \"оргазм\",\r\n            \"горком\",\r\n            \"грабеж\",\r\n            \"кровля\",\r\n            \"лизинг\",\r\n            \"лысина\",\r\n            \"мюзикл\",\r\n            \"опушка\",\r\n            \"скачок\",\r\n            \"тайник\",\r\n            \"шнурок\",\r\n            \"биолог\",\r\n            \"дикарь\",\r\n            \"мамонт\",\r\n            \"никель\",\r\n            \"свекла\",\r\n            \"сервер\",\r\n            \"собрат\",\r\n            \"целина\",\r\n            \"выемка\",\r\n            \"погром\",\r\n            \"разгон\",\r\n            \"сухарь\",\r\n            \"утопия\",\r\n            \"застой\",\r\n            \"компот\",\r\n            \"малина\",\r\n            \"мускул\",\r\n            \"слепой\",\r\n            \"тендер\",\r\n            \"эталон\",\r\n            \"ватник\",\r\n            \"дизель\",\r\n            \"каприз\",\r\n            \"коврик\",\r\n            \"лапоть\",\r\n            \"ливень\",\r\n            \"сатана\",\r\n            \"уговор\",\r\n            \"чучело\",\r\n            \"аккорд\",\r\n            \"вражда\",\r\n            \"мандат\",\r\n            \"пряник\",\r\n            \"сирена\",\r\n            \"спешка\",\r\n            \"брюшко\",\r\n            \"графин\",\r\n            \"киллер\",\r\n            \"обиход\",\r\n            \"прилив\",\r\n            \"пьянка\",\r\n            \"родник\",\r\n            \"седина\",\r\n            \"сортир\",\r\n            \"ураган\",\r\n            \"вакуум\",\r\n            \"горсть\",\r\n            \"зайчик\",\r\n            \"клубок\",\r\n            \"кувшин\",\r\n            \"курьер\",\r\n            \"промах\",\r\n            \"роддом\",\r\n            \"сигара\",\r\n            \"хлопок\",\r\n            \"ходьба\",\r\n            \"цемент\",\r\n            \"бронза\",\r\n            \"герцог\",\r\n            \"кинжал\",\r\n            \"опаска\",\r\n            \"свинец\",\r\n            \"сливки\",\r\n            \"упадок\",\r\n            \"братия\",\r\n            \"колдун\",\r\n            \"кузнец\",\r\n            \"монарх\",\r\n            \"плазма\",\r\n            \"трение\",\r\n            \"витязь\",\r\n            \"острие\",\r\n            \"тамбур\",\r\n            \"флакон\",\r\n            \"десант\",\r\n            \"карлик\",\r\n            \"корыто\",\r\n            \"маньяк\",\r\n            \"округа\",\r\n            \"отвага\",\r\n            \"сговор\",\r\n            \"скобка\",\r\n            \"смазка\",\r\n            \"бармен\",\r\n            \"беглец\",\r\n            \"залежь\",\r\n            \"колода\",\r\n            \"мольба\",\r\n            \"нянька\",\r\n            \"пробел\",\r\n            \"пролив\",\r\n            \"султан\",\r\n            \"узелок\",\r\n            \"щелчок\",\r\n            \"артель\",\r\n            \"баллон\",\r\n            \"восход\",\r\n            \"княжна\",\r\n            \"пляска\",\r\n            \"протез\",\r\n            \"разлом\",\r\n            \"фургон\",\r\n            \"льдина\",\r\n            \"мечеть\",\r\n            \"натиск\",\r\n            \"осадок\",\r\n            \"фартук\",\r\n            \"вулкан\",\r\n            \"козырь\",\r\n            \"магнит\",\r\n            \"насыпь\",\r\n            \"пастор\",\r\n            \"ручеек\",\r\n            \"стерва\",\r\n            \"флажок\",\r\n            \"шелест\",\r\n            \"блузка\",\r\n            \"духота\",\r\n            \"карниз\",\r\n            \"косарь\",\r\n            \"ладоши\",\r\n            \"милорд\",\r\n            \"наклон\",\r\n            \"осадки\",\r\n            \"пелена\",\r\n            \"управа\",\r\n            \"цинизм\",\r\n            \"эгоизм\",\r\n            \"атаман\",\r\n            \"детище\",\r\n            \"кобыла\",\r\n            \"охапка\",\r\n            \"пароль\",\r\n            \"ругань\",\r\n            \"смешок\",\r\n            \"сорока\",\r\n            \"стукач\",\r\n            \"фанера\",\r\n            \"флейта\",\r\n            \"шлюпка\",\r\n            \"генсек\",\r\n            \"дождик\",\r\n            \"кладка\",\r\n            \"монгол\",\r\n            \"серьга\",\r\n            \"уныние\",\r\n            \"хватка\",\r\n            \"хижина\",\r\n            \"эпопея\",\r\n            \"бутыль\",\r\n            \"диктор\",\r\n            \"картон\",\r\n            \"прямая\",\r\n            \"стайка\",\r\n            \"умысел\",\r\n            \"эпитет\",\r\n            \"взятие\",\r\n            \"глобус\",\r\n            \"гранит\",\r\n            \"дефолт\",\r\n            \"зигзаг\",\r\n            \"макияж\",\r\n            \"модерн\",\r\n            \"прадед\",\r\n            \"пролет\",\r\n            \"трофей\",\r\n            \"угодье\",\r\n            \"уголек\",\r\n            \"щетина\",\r\n            \"арбитр\",\r\n            \"бархат\",\r\n            \"болван\",\r\n            \"каскад\",\r\n            \"катюша\",\r\n            \"кореец\",\r\n            \"полено\",\r\n            \"резьба\",\r\n            \"фреска\",\r\n            \"шаблон\",\r\n            \"блюдце\",\r\n            \"боксер\",\r\n            \"зверек\",\r\n            \"карцер\",\r\n            \"кобель\",\r\n            \"овация\",\r\n            \"раввин\",\r\n            \"радист\",\r\n            \"боцман\",\r\n            \"бункер\",\r\n            \"героин\",\r\n            \"гибрид\",\r\n            \"гильза\",\r\n            \"допуск\",\r\n            \"ночлег\",\r\n            \"рацион\",\r\n            \"свинка\",\r\n            \"социум\",\r\n            \"стишок\",\r\n            \"сценка\",\r\n            \"братва\",\r\n            \"елочка\",\r\n            \"жемчуг\",\r\n            \"качели\",\r\n            \"курган\",\r\n            \"пробег\",\r\n            \"варвар\",\r\n            \"галька\",\r\n            \"кисель\",\r\n            \"кустик\",\r\n            \"лавина\",\r\n            \"лифчик\",\r\n            \"лучшее\",\r\n            \"мякоть\",\r\n            \"подрыв\",\r\n            \"ракурс\",\r\n            \"рябина\",\r\n            \"сжатие\",\r\n            \"творог\",\r\n            \"топчан\",\r\n            \"трость\",\r\n            \"тряпье\",\r\n            \"абажур\",\r\n            \"бушлат\",\r\n            \"галоша\",\r\n            \"гарант\",\r\n            \"дачник\",\r\n            \"лайнер\",\r\n            \"ломтик\",\r\n            \"натрий\",\r\n            \"рвение\",\r\n            \"снежок\",\r\n            \"тягота\",\r\n            \"экстаз\",\r\n            \"гипноз\",\r\n            \"декрет\",\r\n            \"дрожжи\",\r\n            \"завеса\",\r\n            \"компас\",\r\n            \"консул\",\r\n            \"ледник\",\r\n            \"медуза\",\r\n            \"опилки\",\r\n            \"персик\",\r\n            \"прибой\",\r\n            \"танцор\",\r\n            \"калека\",\r\n            \"маркиз\",\r\n            \"микроб\",\r\n            \"наркоз\",\r\n            \"оконце\",\r\n            \"пижама\",\r\n            \"подтип\",\r\n            \"путник\",\r\n            \"фараон\",\r\n            \"фарфор\",\r\n            \"шкурка\",\r\n            \"атеист\",\r\n            \"выкрик\",\r\n            \"гравий\",\r\n            \"детдом\",\r\n            \"кактус\",\r\n            \"каштан\",\r\n            \"куплет\",\r\n            \"латынь\",\r\n            \"листик\",\r\n            \"матрац\",\r\n            \"пивная\",\r\n            \"птенец\",\r\n            \"росток\",\r\n            \"скачка\",\r\n            \"сударь\",\r\n            \"фальшь\",\r\n            \"бабуля\",\r\n            \"буксир\",\r\n            \"каратэ\",\r\n            \"клякса\",\r\n            \"марево\",\r\n            \"обойма\",\r\n            \"пептид\",\r\n            \"разлив\",\r\n            \"старое\",\r\n            \"хлопец\",\r\n            \"бардак\",\r\n            \"браток\",\r\n            \"дебаты\",\r\n            \"клеймо\",\r\n            \"клинок\",\r\n            \"лишнее\",\r\n            \"нацист\",\r\n            \"нейрон\",\r\n            \"оптика\",\r\n            \"пермяк\",\r\n            \"слежка\",\r\n            \"сорняк\",\r\n            \"червяк\",\r\n            \"гавань\",\r\n            \"голень\",\r\n            \"ковбой\",\r\n            \"немощь\",\r\n            \"отсвет\",\r\n            \"сажень\",\r\n            \"словцо\",\r\n            \"сперма\",\r\n            \"фольга\",\r\n            \"шантаж\",\r\n            \"батька\",\r\n            \"долька\",\r\n            \"нагрев\",\r\n            \"общага\",\r\n            \"оправа\",\r\n            \"партер\",\r\n            \"паства\",\r\n            \"подвох\",\r\n            \"призер\",\r\n            \"прицеп\",\r\n            \"прораб\",\r\n            \"уловка\",\r\n            \"холмик\",\r\n            \"штанга\",\r\n            \"акация\",\r\n            \"ателье\",\r\n            \"вахтер\",\r\n            \"жаргон\",\r\n            \"ломоть\",\r\n            \"лоскут\",\r\n            \"мантия\",\r\n            \"пикник\",\r\n            \"подиум\",\r\n            \"портал\",\r\n            \"сварка\",\r\n            \"умелец\",\r\n            \"этикет\",\r\n            \"вампир\",\r\n            \"веяние\",\r\n            \"десерт\",\r\n            \"дубина\",\r\n            \"жребий\",\r\n            \"завхоз\",\r\n            \"игумен\",\r\n            \"мимика\",\r\n            \"орешек\",\r\n            \"пенсне\",\r\n            \"помост\",\r\n            \"пряжка\",\r\n            \"разгул\",\r\n            \"рассол\",\r\n            \"травля\",\r\n            \"тропка\",\r\n            \"хлопья\",\r\n            \"шелуха\",\r\n            \"ведомо\",\r\n            \"кокаин\",\r\n            \"лектор\",\r\n            \"людоед\",\r\n            \"магнат\",\r\n            \"настил\",\r\n            \"отрава\",\r\n            \"пощада\",\r\n            \"прииск\",\r\n            \"утварь\",\r\n            \"фантом\",\r\n            \"герпес\",\r\n            \"дельта\",\r\n            \"засуха\",\r\n            \"кассир\",\r\n            \"макака\",\r\n            \"осанка\",\r\n            \"прения\",\r\n            \"протон\",\r\n            \"пучина\",\r\n            \"пыльца\",\r\n            \"реванш\",\r\n            \"резюме\",\r\n            \"сервиз\",\r\n            \"соната\",\r\n            \"стычка\",\r\n            \"фляжка\",\r\n            \"холера\",\r\n            \"азбука\",\r\n            \"амплуа\",\r\n            \"ампула\",\r\n            \"амулет\",\r\n            \"бампер\",\r\n            \"банька\",\r\n            \"бедняк\",\r\n            \"богема\",\r\n            \"винтик\",\r\n            \"грабли\",\r\n            \"гроздь\",\r\n            \"декада\",\r\n            \"диабет\",\r\n            \"жвачка\",\r\n            \"капкан\",\r\n            \"кордон\",\r\n            \"кортеж\",\r\n            \"кретин\",\r\n            \"матерь\",\r\n            \"мичман\",\r\n            \"настой\",\r\n            \"повтор\",\r\n            \"подряд\",\r\n            \"призма\",\r\n            \"пролог\",\r\n            \"расизм\",\r\n            \"рыбина\",\r\n            \"субтип\",\r\n            \"тельце\",\r\n            \"термос\",\r\n            \"фиалка\",\r\n            \"язычок\",\r\n            \"ананас\",\r\n            \"барыня\",\r\n            \"бублик\",\r\n            \"вещица\",\r\n            \"грудка\",\r\n            \"деготь\",\r\n            \"диспут\",\r\n            \"догмат\",\r\n            \"жратва\",\r\n            \"зарево\",\r\n            \"комета\",\r\n            \"лесник\",\r\n            \"лоджия\",\r\n            \"маркер\",\r\n            \"неволя\",\r\n            \"недруг\",\r\n            \"полынь\",\r\n            \"разбег\",\r\n            \"специя\",\r\n            \"ювелир\",\r\n            \"ястреб\",\r\n            \"бабуся\",\r\n            \"бурьян\",\r\n            \"витраж\",\r\n            \"клюква\",\r\n            \"копоть\",\r\n            \"кубрик\",\r\n            \"кузина\",\r\n            \"лекарь\",\r\n            \"мессия\",\r\n            \"мозоль\",\r\n            \"наплыв\",\r\n            \"отмель\",\r\n            \"привал\",\r\n            \"слоган\",\r\n            \"снасть\",\r\n            \"цензор\",\r\n            \"эпилог\",\r\n            \"бордюр\",\r\n            \"бостон\",\r\n            \"всхлип\",\r\n            \"газель\",\r\n            \"домино\",\r\n            \"калоша\",\r\n            \"ковчег\",\r\n            \"магний\",\r\n            \"мачеха\",\r\n            \"одежка\",\r\n            \"отзвук\",\r\n            \"папаха\",\r\n            \"прикол\",\r\n            \"припас\",\r\n            \"прокол\",\r\n            \"слиток\",\r\n            \"сюртук\",\r\n            \"танкер\",\r\n            \"ушанка\",\r\n            \"чаяние\",\r\n            \"челнок\",\r\n            \"швабра\",\r\n            \"эгоист\",\r\n            \"юбиляр\",\r\n            \"ящичек\",\r\n            \"бантик\",\r\n            \"буклет\",\r\n            \"вымпел\",\r\n            \"желток\",\r\n            \"иерарх\",\r\n            \"кабаре\",\r\n            \"картер\",\r\n            \"конфуз\",\r\n            \"лагуна\",\r\n            \"лентяй\",\r\n            \"низина\",\r\n            \"параша\",\r\n            \"пробор\",\r\n            \"разбой\",\r\n            \"смычок\",\r\n            \"соболь\",\r\n            \"халява\",\r\n            \"шмотки\",\r\n            \"болтун\",\r\n            \"брусок\",\r\n            \"гадина\",\r\n            \"галифе\",\r\n            \"дверка\",\r\n            \"йогурт\",\r\n            \"опекун\",\r\n            \"плевок\",\r\n            \"потеха\",\r\n            \"псалом\",\r\n            \"сеянец\",\r\n            \"сотник\",\r\n            \"темень\",\r\n            \"членик\",\r\n            \"агония\",\r\n            \"братан\",\r\n            \"буржуй\",\r\n            \"зевака\",\r\n            \"кожура\",\r\n            \"костяк\",\r\n            \"месиво\",\r\n            \"миссис\",\r\n            \"мясник\",\r\n            \"облава\",\r\n            \"пловец\",\r\n            \"примус\",\r\n            \"проток\",\r\n            \"страус\",\r\n            \"триада\",\r\n            \"фосфор\",\r\n            \"апатия\",\r\n            \"атташе\",\r\n            \"бритье\",\r\n            \"брокер\",\r\n            \"вскрик\",\r\n            \"грибок\",\r\n            \"детина\",\r\n            \"доярка\",\r\n            \"желвак\",\r\n            \"заслон\",\r\n            \"кожица\",\r\n            \"курево\",\r\n            \"одышка\",\r\n            \"склока\",\r\n            \"таджик\",\r\n            \"толчея\",\r\n            \"увечье\",\r\n            \"улитка\",\r\n            \"утроба\",\r\n            \"фасоль\",\r\n            \"шутник\",\r\n            \"щебень\",\r\n            \"грация\",\r\n            \"грызун\",\r\n            \"движок\",\r\n            \"зануда\",\r\n            \"зодчий\",\r\n            \"индиец\",\r\n            \"ландыш\",\r\n            \"люлька\",\r\n            \"маразм\",\r\n            \"маузер\",\r\n            \"обивка\",\r\n            \"пальба\",\r\n            \"писарь\",\r\n            \"покрой\",\r\n            \"пчелка\",\r\n            \"разлад\",\r\n            \"синица\",\r\n            \"фабула\",\r\n            \"эколог\",\r\n            \"аммиак\",\r\n            \"атеизм\",\r\n            \"водила\",\r\n            \"диакон\",\r\n            \"изотоп\",\r\n            \"каньон\",\r\n            \"капрал\",\r\n            \"карась\",\r\n            \"комдив\",\r\n            \"кьянти\",\r\n            \"лисица\",\r\n            \"логово\",\r\n            \"лыжник\",\r\n            \"невроз\",\r\n            \"прогон\",\r\n            \"раздор\",\r\n            \"разнос\",\r\n            \"рутина\",\r\n            \"спящий\",\r\n            \"тирада\",\r\n            \"трешка\",\r\n            \"фрегат\",\r\n            \"хромой\",\r\n            \"ямочка\",\r\n            \"ангина\",\r\n            \"аншлаг\",\r\n            \"бдение\",\r\n            \"глухой\",\r\n            \"змейка\",\r\n            \"кафель\",\r\n            \"лацкан\",\r\n            \"литера\",\r\n            \"нагота\",\r\n            \"надрыв\",\r\n            \"нажива\",\r\n            \"натуга\",\r\n            \"немота\",\r\n            \"оракул\",\r\n            \"оттиск\",\r\n            \"пилюля\",\r\n            \"подкуп\",\r\n            \"похоть\",\r\n            \"психоз\",\r\n            \"столяр\",\r\n            \"сфинкс\",\r\n            \"фитиль\",\r\n            \"иезуит\",\r\n            \"ротный\",\r\n            \"глупец\",\r\n            \"пудель\",\r\n            \"свиток\",\r\n            \"чудище\",\r\n            \"горняк\",\r\n            \"раскат\",\r\n            \"эрозия\",\r\n            \"овечка\",\r\n            \"ельник\",\r\n            \"токарь\",\r\n            \"фикция\",\r\n            \"лужица\",\r\n            \"распря\",\r\n            \"тюлень\",\r\n        ],\r\n        7: [\r\n            \"человек\",\r\n            \"сторона\",\r\n            \"ребенок\",\r\n            \"система\",\r\n            \"женщина\",\r\n            \"решение\",\r\n            \"история\",\r\n            \"область\",\r\n            \"процесс\",\r\n            \"условие\",\r\n            \"уровень\",\r\n            \"комната\",\r\n            \"порядок\",\r\n            \"интерес\",\r\n            \"правило\",\r\n            \"мужчина\",\r\n            \"чувство\",\r\n            \"причина\",\r\n            \"товарищ\",\r\n            \"встреча\",\r\n            \"девушка\",\r\n            \"очередь\",\r\n            \"событие\",\r\n            \"принцип\",\r\n            \"мальчик\",\r\n            \"участие\",\r\n            \"девочка\",\r\n            \"картина\",\r\n            \"рисунок\",\r\n            \"течение\",\r\n            \"церковь\",\r\n            \"свобода\",\r\n            \"команда\",\r\n            \"договор\",\r\n            \"природа\",\r\n            \"телефон\",\r\n            \"позиция\",\r\n            \"самолет\",\r\n            \"процент\",\r\n            \"степень\",\r\n            \"надежда\",\r\n            \"предмет\",\r\n            \"вариант\",\r\n            \"министр\",\r\n            \"граница\",\r\n            \"миллион\",\r\n            \"счастье\",\r\n            \"кабинет\",\r\n            \"магазин\",\r\n            \"площадь\",\r\n            \"возраст\",\r\n            \"участок\",\r\n            \"желание\",\r\n            \"генерал\",\r\n            \"понятие\",\r\n            \"радость\",\r\n            \"продукт\",\r\n            \"реформа\",\r\n            \"будущее\",\r\n            \"рассказ\",\r\n            \"техника\",\r\n            \"деревня\",\r\n            \"элемент\",\r\n            \"функция\",\r\n            \"капитан\",\r\n            \"фамилия\",\r\n            \"бутылка\",\r\n            \"влияние\",\r\n            \"учитель\",\r\n            \"корабль\",\r\n            \"детство\",\r\n            \"прошлое\",\r\n            \"коридор\",\r\n            \"болезнь\",\r\n            \"попытка\",\r\n            \"депутат\",\r\n            \"комитет\",\r\n            \"десяток\",\r\n            \"глубина\",\r\n            \"студент\",\r\n            \"секунда\",\r\n            \"станция\",\r\n            \"бабушка\",\r\n            \"столица\",\r\n            \"энергия\",\r\n            \"реакция\",\r\n            \"отличие\",\r\n            \"красота\",\r\n            \"явление\",\r\n            \"наличие\",\r\n            \"больной\",\r\n            \"декабрь\",\r\n            \"октябрь\",\r\n            \"занятие\",\r\n            \"зритель\",\r\n            \"концерт\",\r\n            \"милиция\",\r\n            \"переход\",\r\n            \"кровать\",\r\n            \"аппарат\",\r\n            \"отрасль\",\r\n            \"продажа\",\r\n            \"образец\",\r\n            \"главное\",\r\n            \"таблица\",\r\n            \"коллега\",\r\n            \"оборона\",\r\n            \"подруга\",\r\n            \"признак\",\r\n            \"перевод\",\r\n            \"русский\",\r\n            \"подарок\",\r\n            \"конкурс\",\r\n            \"просьба\",\r\n            \"публика\",\r\n            \"реклама\",\r\n            \"портрет\",\r\n            \"зеркало\",\r\n            \"поездка\",\r\n            \"февраль\",\r\n            \"издание\",\r\n            \"темнота\",\r\n            \"партнер\",\r\n            \"страсть\",\r\n            \"разница\",\r\n            \"формула\",\r\n            \"капитал\",\r\n            \"новость\",\r\n            \"эксперт\",\r\n            \"автобус\",\r\n            \"общение\",\r\n            \"рабочий\",\r\n            \"постель\",\r\n            \"инженер\",\r\n            \"старуха\",\r\n            \"вершина\",\r\n            \"записка\",\r\n            \"совесть\",\r\n            \"господь\",\r\n            \"потолок\",\r\n            \"контакт\",\r\n            \"восторг\",\r\n            \"автомат\",\r\n            \"поселок\",\r\n            \"поворот\",\r\n            \"дыхание\",\r\n            \"масштаб\",\r\n            \"хозяйка\",\r\n            \"москвич\",\r\n            \"остаток\",\r\n            \"затрата\",\r\n            \"единица\",\r\n            \"изделие\",\r\n            \"молитва\",\r\n            \"планета\",\r\n            \"минимум\",\r\n            \"тревога\",\r\n            \"задание\",\r\n            \"бригада\",\r\n            \"надпись\",\r\n            \"паспорт\",\r\n            \"адвокат\",\r\n            \"коробка\",\r\n            \"дедушка\",\r\n            \"прибыль\",\r\n            \"лечение\",\r\n            \"рубашка\",\r\n            \"политик\",\r\n            \"экзамен\",\r\n            \"питание\",\r\n            \"оркестр\",\r\n            \"критика\",\r\n            \"религия\",\r\n            \"карьера\",\r\n            \"чемодан\",\r\n            \"скандал\",\r\n            \"покупка\",\r\n            \"доверие\",\r\n            \"колонна\",\r\n            \"падение\",\r\n            \"ведение\",\r\n            \"тарелка\",\r\n            \"деятель\",\r\n            \"выстрел\",\r\n            \"полгода\",\r\n            \"подпись\",\r\n            \"актриса\",\r\n            \"прогноз\",\r\n            \"повесть\",\r\n            \"свадьба\",\r\n            \"подушка\",\r\n            \"справка\",\r\n            \"ботинок\",\r\n            \"молодец\",\r\n            \"авиация\",\r\n            \"дневник\",\r\n            \"полиция\",\r\n            \"полчаса\",\r\n            \"бумажка\",\r\n            \"империя\",\r\n            \"суббота\",\r\n            \"дорожка\",\r\n            \"историк\",\r\n            \"замысел\",\r\n            \"фабрика\",\r\n            \"училище\",\r\n            \"городок\",\r\n            \"легенда\",\r\n            \"частица\",\r\n            \"крыльцо\",\r\n            \"пациент\",\r\n            \"тяжесть\",\r\n            \"кусочек\",\r\n            \"военный\",\r\n            \"чемпион\",\r\n            \"копейка\",\r\n            \"раствор\",\r\n            \"анекдот\",\r\n            \"награда\",\r\n            \"маршрут\",\r\n            \"сержант\",\r\n            \"дивизия\",\r\n            \"бассейн\",\r\n            \"медведь\",\r\n            \"квартал\",\r\n            \"топливо\",\r\n            \"пустота\",\r\n            \"премьер\",\r\n            \"француз\",\r\n            \"сиденье\",\r\n            \"выплата\",\r\n            \"перерыв\",\r\n            \"спутник\",\r\n            \"веревка\",\r\n            \"ступень\",\r\n            \"затылок\",\r\n            \"невеста\",\r\n            \"посадка\",\r\n            \"царство\",\r\n            \"экспорт\",\r\n            \"профиль\",\r\n            \"учебник\",\r\n            \"игрушка\",\r\n            \"философ\",\r\n            \"олигарх\",\r\n            \"строчка\",\r\n            \"сборная\",\r\n            \"кафедра\",\r\n            \"напиток\",\r\n            \"пятница\",\r\n            \"оттенок\",\r\n            \"пустыня\",\r\n            \"сборник\",\r\n            \"среднее\",\r\n            \"чистота\",\r\n            \"асфальт\",\r\n            \"палатка\",\r\n            \"ветеран\",\r\n            \"решетка\",\r\n            \"батарея\",\r\n            \"рейтинг\",\r\n            \"соседка\",\r\n            \"завтрак\",\r\n            \"заслуга\",\r\n            \"контора\",\r\n            \"трамвай\",\r\n            \"галстук\",\r\n            \"колбаса\",\r\n            \"лишение\",\r\n            \"протест\",\r\n            \"педагог\",\r\n            \"видение\",\r\n            \"семинар\",\r\n            \"охотник\",\r\n            \"фракция\",\r\n            \"насилие\",\r\n            \"спальня\",\r\n            \"инвалид\",\r\n            \"финансы\",\r\n            \"цепочка\",\r\n            \"трибуна\",\r\n            \"загадка\",\r\n            \"заметка\",\r\n            \"владыка\",\r\n            \"диаметр\",\r\n            \"конверт\",\r\n            \"неудача\",\r\n            \"рассвет\",\r\n            \"сволочь\",\r\n            \"мелодия\",\r\n            \"раненый\",\r\n            \"полнота\",\r\n            \"индивид\",\r\n            \"пароход\",\r\n            \"машинка\",\r\n            \"супруга\",\r\n            \"иллюзия\",\r\n            \"союзник\",\r\n            \"колодец\",\r\n            \"реплика\",\r\n            \"словарь\",\r\n            \"простор\",\r\n            \"близкие\",\r\n            \"вспышка\",\r\n            \"пособие\",\r\n            \"жалость\",\r\n            \"тетрадь\",\r\n            \"кислота\",\r\n            \"дефицит\",\r\n            \"спасибо\",\r\n            \"галерея\",\r\n            \"держава\",\r\n            \"зависть\",\r\n            \"тротуар\",\r\n            \"стрелка\",\r\n            \"трактор\",\r\n            \"головка\",\r\n            \"зрелище\",\r\n            \"комедия\",\r\n            \"должник\",\r\n            \"клиника\",\r\n            \"частота\",\r\n            \"материя\",\r\n            \"желудок\",\r\n            \"апостол\",\r\n            \"бульвар\",\r\n            \"четверг\",\r\n            \"капуста\",\r\n            \"пулемет\",\r\n            \"окраина\",\r\n            \"бабочка\",\r\n            \"палочка\",\r\n            \"поцелуй\",\r\n            \"сумерки\",\r\n            \"лауреат\",\r\n            \"феномен\",\r\n            \"героиня\",\r\n            \"чеченец\",\r\n            \"милость\",\r\n            \"потомок\",\r\n            \"осколок\",\r\n            \"приступ\",\r\n            \"тактика\",\r\n            \"психика\",\r\n            \"полдень\",\r\n            \"толщина\",\r\n            \"конфета\",\r\n            \"корзина\",\r\n            \"полотно\",\r\n            \"вторник\",\r\n            \"епископ\",\r\n            \"полоска\",\r\n            \"пропуск\",\r\n            \"колония\",\r\n            \"витрина\",\r\n            \"госпожа\",\r\n            \"шахматы\",\r\n            \"батюшка\",\r\n            \"диагноз\",\r\n            \"трещина\",\r\n            \"витамин\",\r\n            \"агрегат\",\r\n            \"калитка\",\r\n            \"окраска\",\r\n            \"татарин\",\r\n            \"вакцина\",\r\n            \"скрипка\",\r\n            \"примета\",\r\n            \"классик\",\r\n            \"возврат\",\r\n            \"импульс\",\r\n            \"находка\",\r\n            \"стадион\",\r\n            \"особняк\",\r\n            \"стоянка\",\r\n            \"десятка\",\r\n            \"усадьба\",\r\n            \"величие\",\r\n            \"стройка\",\r\n            \"челюсть\",\r\n            \"аукцион\",\r\n            \"полночь\",\r\n            \"интрига\",\r\n            \"квадрат\",\r\n            \"ясность\",\r\n            \"грамота\",\r\n            \"доброта\",\r\n            \"коляска\",\r\n            \"порошок\",\r\n            \"сюрприз\",\r\n            \"беженец\",\r\n            \"подобие\",\r\n            \"обложка\",\r\n            \"ресница\",\r\n            \"кассета\",\r\n            \"походка\",\r\n            \"монолог\",\r\n            \"пятерка\",\r\n            \"матушка\",\r\n            \"поручик\",\r\n            \"занавес\",\r\n            \"концерн\",\r\n            \"колокол\",\r\n            \"барабан\",\r\n            \"песенка\",\r\n            \"граната\",\r\n            \"заговор\",\r\n            \"писание\",\r\n            \"догадка\",\r\n            \"роскошь\",\r\n            \"новинка\",\r\n            \"помидор\",\r\n            \"эстрада\",\r\n            \"аппетит\",\r\n            \"отметка\",\r\n            \"фуражка\",\r\n            \"валенок\",\r\n            \"сегмент\",\r\n            \"безумие\",\r\n            \"мертвый\",\r\n            \"ранение\",\r\n            \"санкция\",\r\n            \"серебро\",\r\n            \"закуска\",\r\n            \"очистка\",\r\n            \"терраса\",\r\n            \"холдинг\",\r\n            \"призрак\",\r\n            \"схватка\",\r\n            \"дирижер\",\r\n            \"новичок\",\r\n            \"обочина\",\r\n            \"пошлина\",\r\n            \"хлопоты\",\r\n            \"воробей\",\r\n            \"котенок\",\r\n            \"прирост\",\r\n            \"гепатит\",\r\n            \"волокно\",\r\n            \"курсант\",\r\n            \"складка\",\r\n            \"сумочка\",\r\n            \"юстиция\",\r\n            \"веселье\",\r\n            \"персона\",\r\n            \"фигурка\",\r\n            \"деление\",\r\n            \"закупка\",\r\n            \"слияние\",\r\n            \"отрывок\",\r\n            \"каталог\",\r\n            \"переезд\",\r\n            \"полигон\",\r\n            \"спонсор\",\r\n            \"обломок\",\r\n            \"старина\",\r\n            \"адмирал\",\r\n            \"веранда\",\r\n            \"всадник\",\r\n            \"казарма\",\r\n            \"матрица\",\r\n            \"посылка\",\r\n            \"ярмарка\",\r\n            \"генштаб\",\r\n            \"гонорар\",\r\n            \"емкость\",\r\n            \"стебель\",\r\n            \"амбиция\",\r\n            \"дворник\",\r\n            \"патриот\",\r\n            \"подсчет\",\r\n            \"соблазн\",\r\n            \"усмешка\",\r\n            \"барышня\",\r\n            \"механик\",\r\n            \"цензура\",\r\n            \"варенье\",\r\n            \"ловушка\",\r\n            \"мамочка\",\r\n            \"полость\",\r\n            \"престол\",\r\n            \"блокнот\",\r\n            \"лопатка\",\r\n            \"негодяй\",\r\n            \"острота\",\r\n            \"арсенал\",\r\n            \"задница\",\r\n            \"лавочка\",\r\n            \"парочка\",\r\n            \"правота\",\r\n            \"предлог\",\r\n            \"уступка\",\r\n            \"коленка\",\r\n            \"цилиндр\",\r\n            \"заросль\",\r\n            \"зоопарк\",\r\n            \"избыток\",\r\n            \"кончина\",\r\n            \"молоток\",\r\n            \"гадость\",\r\n            \"должное\",\r\n            \"колледж\",\r\n            \"морщина\",\r\n            \"перелом\",\r\n            \"муравей\",\r\n            \"пирожок\",\r\n            \"собачка\",\r\n            \"ветерок\",\r\n            \"кавалер\",\r\n            \"путевка\",\r\n            \"ремесло\",\r\n            \"гвардия\",\r\n            \"комфорт\",\r\n            \"сенатор\",\r\n            \"мемуары\",\r\n            \"рубрика\",\r\n            \"комбайн\",\r\n            \"пружина\",\r\n            \"самовар\",\r\n            \"симптом\",\r\n            \"инфаркт\",\r\n            \"княгиня\",\r\n            \"конюшня\",\r\n            \"лопасть\",\r\n            \"обрывок\",\r\n            \"пленный\",\r\n            \"хулиган\",\r\n            \"шапочка\",\r\n            \"вывеска\",\r\n            \"добавка\",\r\n            \"кошелек\",\r\n            \"обаяние\",\r\n            \"паровоз\",\r\n            \"старший\",\r\n            \"часовой\",\r\n            \"выпивка\",\r\n            \"паутина\",\r\n            \"верблюд\",\r\n            \"котлета\",\r\n            \"бегство\",\r\n            \"епархия\",\r\n            \"хроника\",\r\n            \"армянин\",\r\n            \"кипяток\",\r\n            \"обитель\",\r\n            \"похвала\",\r\n            \"скотина\",\r\n            \"атрибут\",\r\n            \"инерция\",\r\n            \"колонка\",\r\n            \"подошва\",\r\n            \"шоколад\",\r\n            \"выручка\",\r\n            \"перенос\",\r\n            \"пьяница\",\r\n            \"санитар\",\r\n            \"абонент\",\r\n            \"бинокль\",\r\n            \"близнец\",\r\n            \"катание\",\r\n            \"гребень\",\r\n            \"лягушка\",\r\n            \"чернила\",\r\n            \"выдумка\",\r\n            \"котелок\",\r\n            \"пальчик\",\r\n            \"пшеница\",\r\n            \"тележка\",\r\n            \"ведущий\",\r\n            \"выигрыш\",\r\n            \"обморок\",\r\n            \"отрезок\",\r\n            \"разлука\",\r\n            \"таракан\",\r\n            \"уборная\",\r\n            \"всплеск\",\r\n            \"коттедж\",\r\n            \"расцвет\",\r\n            \"родство\",\r\n            \"спецназ\",\r\n            \"таможня\",\r\n            \"выборка\",\r\n            \"клавиша\",\r\n            \"мучение\",\r\n            \"отделка\",\r\n            \"пианист\",\r\n            \"реализм\",\r\n            \"фонарик\",\r\n            \"паренек\",\r\n            \"повязка\",\r\n            \"попугай\",\r\n            \"разгром\",\r\n            \"ближний\",\r\n            \"вексель\",\r\n            \"парашют\",\r\n            \"любимец\",\r\n            \"помойка\",\r\n            \"антиген\",\r\n            \"выходец\",\r\n            \"монитор\",\r\n            \"пустырь\",\r\n            \"водород\",\r\n            \"волосок\",\r\n            \"дружина\",\r\n            \"ладошка\",\r\n            \"минутка\",\r\n            \"рабство\",\r\n            \"синдром\",\r\n            \"детишки\",\r\n            \"либерал\",\r\n            \"спираль\",\r\n            \"вестник\",\r\n            \"передел\",\r\n            \"сидение\",\r\n            \"тапочка\",\r\n            \"терапия\",\r\n            \"цыпочки\",\r\n            \"небытие\",\r\n            \"равнина\",\r\n            \"рыбалка\",\r\n            \"слесарь\",\r\n            \"соавтор\",\r\n            \"костыль\",\r\n            \"минерал\",\r\n            \"полвека\",\r\n            \"стрелок\",\r\n            \"воронка\",\r\n            \"ниточка\",\r\n            \"убежище\",\r\n            \"опухоль\",\r\n            \"святыня\",\r\n            \"сметана\",\r\n            \"пузырек\",\r\n            \"сплетня\",\r\n            \"таксист\",\r\n            \"вешалка\",\r\n            \"грузчик\",\r\n            \"мертвец\",\r\n            \"морковь\",\r\n            \"престиж\",\r\n            \"теорема\",\r\n            \"воевода\",\r\n            \"выписка\",\r\n            \"делегат\",\r\n            \"макушка\",\r\n            \"ножницы\",\r\n            \"станица\",\r\n            \"артерия\",\r\n            \"избушка\",\r\n            \"линейка\",\r\n            \"аксиома\",\r\n            \"антенна\",\r\n            \"козырек\",\r\n            \"сережка\",\r\n            \"катушка\",\r\n            \"селение\",\r\n            \"счетчик\",\r\n            \"возглас\",\r\n            \"носилки\",\r\n            \"просвет\",\r\n            \"роспись\",\r\n            \"сечение\",\r\n            \"сувенир\",\r\n            \"тоннель\",\r\n            \"укрытие\",\r\n            \"бедняга\",\r\n            \"горючее\",\r\n            \"джунгли\",\r\n            \"материк\",\r\n            \"фаворит\",\r\n            \"выговор\",\r\n            \"действо\",\r\n            \"камешек\",\r\n            \"коммуна\",\r\n            \"останки\",\r\n            \"сверток\",\r\n            \"беседка\",\r\n            \"двойник\",\r\n            \"ложечка\",\r\n            \"лошадка\",\r\n            \"мигрант\",\r\n            \"патруль\",\r\n            \"снайпер\",\r\n            \"чашечка\",\r\n            \"дядюшка\",\r\n            \"карабин\",\r\n            \"малость\",\r\n            \"печенье\",\r\n            \"соловей\",\r\n            \"теленок\",\r\n            \"больная\",\r\n            \"идеолог\",\r\n            \"мученик\",\r\n            \"струйка\",\r\n            \"графиня\",\r\n            \"гримаса\",\r\n            \"дурачок\",\r\n            \"примесь\",\r\n            \"танкист\",\r\n            \"теплота\",\r\n            \"траншея\",\r\n            \"дельфин\",\r\n            \"обстрел\",\r\n            \"пианино\",\r\n            \"расклад\",\r\n            \"резинка\",\r\n            \"сырость\",\r\n            \"керосин\",\r\n            \"курение\",\r\n            \"пристав\",\r\n            \"сосиска\",\r\n            \"центнер\",\r\n            \"бродяга\",\r\n            \"заемщик\",\r\n            \"створка\",\r\n            \"тетушка\",\r\n            \"блокада\",\r\n            \"брошюра\",\r\n            \"водопад\",\r\n            \"новизна\",\r\n            \"селедка\",\r\n            \"силовик\",\r\n            \"табурет\",\r\n            \"трактат\",\r\n            \"фермент\",\r\n            \"баночка\",\r\n            \"бородка\",\r\n            \"плотник\",\r\n            \"полпред\",\r\n            \"стрижка\",\r\n            \"березка\",\r\n            \"краешек\",\r\n            \"мужичок\",\r\n            \"мутация\",\r\n            \"перевал\",\r\n            \"пешеход\",\r\n            \"подонок\",\r\n            \"скрипач\",\r\n            \"ученица\",\r\n            \"чернота\",\r\n            \"шествие\",\r\n            \"веточка\",\r\n            \"мешочек\",\r\n            \"дырочка\",\r\n            \"поводок\",\r\n            \"рядовой\",\r\n            \"семечко\",\r\n            \"эмиссия\",\r\n            \"пластик\",\r\n            \"полимер\",\r\n            \"помещик\",\r\n            \"поминки\",\r\n            \"приклад\",\r\n            \"прозаик\",\r\n            \"рефлекс\",\r\n            \"адресат\",\r\n            \"браслет\",\r\n            \"гестапо\",\r\n            \"католик\",\r\n            \"личинка\",\r\n            \"лужайка\",\r\n            \"пакетик\",\r\n            \"пародия\",\r\n            \"розочка\",\r\n            \"синоним\",\r\n            \"столбик\",\r\n            \"голосок\",\r\n            \"денежки\",\r\n            \"испанец\",\r\n            \"новелла\",\r\n            \"папочка\",\r\n            \"присяга\",\r\n            \"реактор\",\r\n            \"светило\",\r\n            \"тусовка\",\r\n            \"умерший\",\r\n            \"брезент\",\r\n            \"кластер\",\r\n            \"пленник\",\r\n            \"поприще\",\r\n            \"стеллаж\",\r\n            \"трапеза\",\r\n            \"грешник\",\r\n            \"настрой\",\r\n            \"пастырь\",\r\n            \"ромашка\",\r\n            \"сапожок\",\r\n            \"штурман\",\r\n            \"великан\",\r\n            \"камушек\",\r\n            \"клевета\",\r\n            \"колечко\",\r\n            \"корешок\",\r\n            \"мистика\",\r\n            \"овчарка\",\r\n            \"пятачок\",\r\n            \"гаишник\",\r\n            \"гравюра\",\r\n            \"духовка\",\r\n            \"жеребец\",\r\n            \"канцлер\",\r\n            \"караван\",\r\n            \"плотина\",\r\n            \"теснота\",\r\n            \"тошнота\",\r\n            \"углерод\",\r\n            \"генотип\",\r\n            \"дурочка\",\r\n            \"крапива\",\r\n            \"румянец\",\r\n            \"толстяк\",\r\n            \"транзит\",\r\n            \"хищение\",\r\n            \"цветник\",\r\n            \"графика\",\r\n            \"лепешка\",\r\n            \"маэстро\",\r\n            \"пылесос\",\r\n            \"ревизор\",\r\n            \"россыпь\",\r\n            \"самогон\",\r\n            \"туннель\",\r\n            \"филолог\",\r\n            \"хамство\",\r\n            \"шампунь\",\r\n            \"белизна\",\r\n            \"конвоир\",\r\n            \"крестик\",\r\n            \"полочка\",\r\n            \"рыдание\",\r\n            \"свинина\",\r\n            \"хвостик\",\r\n            \"яркость\",\r\n            \"алфавит\",\r\n            \"застава\",\r\n            \"борозда\",\r\n            \"вымысел\",\r\n            \"гонение\",\r\n            \"зампред\",\r\n            \"зародыш\",\r\n            \"колючка\",\r\n            \"корочка\",\r\n            \"кушетка\",\r\n            \"отблеск\",\r\n            \"перелет\",\r\n            \"усердие\",\r\n            \"цыганка\",\r\n            \"шеренга\",\r\n            \"бурение\",\r\n            \"вставка\",\r\n            \"мозаика\",\r\n            \"облачко\",\r\n            \"оглядка\",\r\n            \"паразит\",\r\n            \"повозка\",\r\n            \"прихоть\",\r\n            \"трусики\",\r\n            \"швейцар\",\r\n            \"барахло\",\r\n            \"баритон\",\r\n            \"галочка\",\r\n            \"ипотека\",\r\n            \"квартет\",\r\n            \"лимузин\",\r\n            \"наемник\",\r\n            \"партком\",\r\n            \"сорочка\",\r\n            \"фанатик\",\r\n            \"часовня\",\r\n            \"эпиграф\",\r\n            \"агроном\",\r\n            \"выходка\",\r\n            \"горница\",\r\n            \"купание\",\r\n            \"лексика\",\r\n            \"мадонна\",\r\n            \"миномет\",\r\n            \"полянка\",\r\n            \"антракт\",\r\n            \"афоризм\",\r\n            \"габарит\",\r\n            \"героизм\",\r\n            \"горение\",\r\n            \"дамочка\",\r\n            \"кальций\",\r\n            \"клеенка\",\r\n            \"начинка\",\r\n            \"планшет\",\r\n            \"повадка\",\r\n            \"поэтика\",\r\n            \"принтер\",\r\n            \"радикал\",\r\n            \"ревизия\",\r\n            \"розетка\",\r\n            \"шкафчик\",\r\n            \"шуточка\",\r\n            \"вещание\",\r\n            \"горячка\",\r\n            \"журавль\",\r\n            \"кулачок\",\r\n            \"помысел\",\r\n            \"просчет\",\r\n            \"фактура\",\r\n            \"холодок\",\r\n            \"баллада\",\r\n            \"блиндаж\",\r\n            \"вырубка\",\r\n            \"гордыня\",\r\n            \"девчата\",\r\n            \"дубинка\",\r\n            \"крейсер\",\r\n            \"лотерея\",\r\n            \"маятник\",\r\n            \"перебор\",\r\n            \"хоровод\",\r\n            \"эмблема\",\r\n            \"ветчина\",\r\n            \"высадка\",\r\n            \"географ\",\r\n            \"еврейка\",\r\n            \"жандарм\",\r\n            \"капюшон\",\r\n            \"мизинец\",\r\n            \"праймер\",\r\n            \"свисток\",\r\n            \"скрежет\",\r\n            \"трактир\",\r\n            \"тренинг\",\r\n            \"тюльпан\",\r\n            \"упоение\",\r\n            \"авоська\",\r\n            \"булавка\",\r\n            \"девятка\",\r\n            \"деревце\",\r\n            \"дощечка\",\r\n            \"зарядка\",\r\n            \"косынка\",\r\n            \"наушник\",\r\n            \"перепад\",\r\n            \"поверка\",\r\n            \"полицай\",\r\n            \"родинка\",\r\n            \"сыночек\",\r\n            \"шпионаж\",\r\n            \"эмбрион\",\r\n            \"ягодица\",\r\n            \"бильярд\",\r\n            \"вратарь\",\r\n            \"дотация\",\r\n            \"каторга\",\r\n            \"куколка\",\r\n            \"монетка\",\r\n            \"пилотка\",\r\n            \"подвода\",\r\n            \"простой\",\r\n            \"турбина\",\r\n            \"баррель\",\r\n            \"булочка\",\r\n            \"вырезка\",\r\n            \"дисплей\",\r\n            \"кабинка\",\r\n            \"коробок\",\r\n            \"лесенка\",\r\n            \"обидчик\",\r\n            \"пеленка\",\r\n            \"пометка\",\r\n            \"рюмочка\",\r\n            \"цитокин\",\r\n            \"яичница\",\r\n            \"блондин\",\r\n            \"гигиена\",\r\n            \"домовой\",\r\n            \"капсула\",\r\n            \"кипение\",\r\n            \"кукушка\",\r\n            \"разврат\",\r\n            \"робость\",\r\n            \"сборище\",\r\n            \"семерка\",\r\n            \"аудитор\",\r\n            \"дискурс\",\r\n            \"железка\",\r\n            \"зачатие\",\r\n            \"искание\",\r\n            \"понятой\",\r\n            \"портной\",\r\n            \"привкус\",\r\n            \"разруха\",\r\n            \"регистр\",\r\n            \"старпом\",\r\n            \"стрелец\",\r\n            \"ударник\",\r\n            \"штурвал\",\r\n            \"безумец\",\r\n            \"везение\",\r\n            \"впадина\",\r\n            \"главарь\",\r\n            \"инсульт\",\r\n            \"колорит\",\r\n            \"кремний\",\r\n            \"любимая\",\r\n            \"паралич\",\r\n            \"перевес\",\r\n            \"ракушка\",\r\n            \"тушенка\",\r\n            \"халатик\",\r\n            \"царевич\",\r\n            \"эйфория\",\r\n            \"водичка\",\r\n            \"громада\",\r\n            \"динамик\",\r\n            \"нападки\",\r\n            \"напасть\",\r\n            \"раздача\",\r\n            \"ремешок\",\r\n            \"слепота\",\r\n            \"укладка\",\r\n            \"ухмылка\",\r\n            \"частник\",\r\n            \"айсберг\",\r\n            \"буханка\",\r\n            \"варежка\",\r\n            \"водочка\",\r\n            \"горелка\",\r\n            \"излишек\",\r\n            \"кабачок\",\r\n            \"локатор\",\r\n            \"новация\",\r\n            \"одеяние\",\r\n            \"петушок\",\r\n            \"русалка\",\r\n            \"связист\",\r\n            \"сгусток\",\r\n            \"шиворот\",\r\n            \"штабель\",\r\n            \"яблочко\",\r\n            \"баранка\",\r\n            \"бугорок\",\r\n            \"вердикт\",\r\n            \"задаток\",\r\n            \"запятая\",\r\n            \"иудаизм\",\r\n            \"каморка\",\r\n            \"мещанин\",\r\n            \"ношение\",\r\n            \"плесень\",\r\n            \"подмена\",\r\n            \"приемка\",\r\n            \"скептик\",\r\n            \"флигель\",\r\n            \"ажиотаж\",\r\n            \"глухарь\",\r\n            \"насморк\",\r\n            \"огурчик\",\r\n            \"прямота\",\r\n            \"реприза\",\r\n            \"упряжка\",\r\n            \"черенок\",\r\n            \"язычник\",\r\n            \"алгебра\",\r\n            \"баталия\",\r\n            \"буддизм\",\r\n            \"вентиль\",\r\n            \"вышивка\",\r\n            \"завязка\",\r\n            \"затишье\",\r\n            \"кавычка\",\r\n            \"комочек\",\r\n            \"косичка\",\r\n            \"обнимка\",\r\n            \"перебой\",\r\n            \"пингвин\",\r\n            \"питомец\",\r\n            \"подступ\",\r\n            \"поломка\",\r\n            \"полпути\",\r\n            \"почести\",\r\n            \"рыболов\",\r\n            \"слобода\",\r\n            \"башенка\",\r\n            \"белорус\",\r\n            \"виртуоз\",\r\n            \"горошек\",\r\n            \"гулянье\",\r\n            \"забытье\",\r\n            \"идиотка\",\r\n            \"куратор\",\r\n            \"молебен\",\r\n            \"нейтрон\",\r\n            \"отпрыск\",\r\n            \"панцирь\",\r\n            \"сарафан\",\r\n            \"стружка\",\r\n            \"туземец\",\r\n            \"банкрот\",\r\n            \"бастион\",\r\n            \"депозит\",\r\n            \"досмотр\",\r\n            \"доспехи\",\r\n            \"колодка\",\r\n            \"корысть\",\r\n            \"кружева\",\r\n            \"мегафон\",\r\n            \"мирянин\",\r\n            \"обличье\",\r\n            \"пакость\",\r\n            \"подкова\",\r\n            \"получас\",\r\n            \"потемки\",\r\n            \"пропажа\",\r\n            \"рулетка\",\r\n            \"сифилис\",\r\n            \"штанина\",\r\n            \"визитка\",\r\n            \"дешевка\",\r\n            \"дружище\",\r\n            \"закуток\",\r\n            \"здравие\",\r\n            \"истукан\",\r\n            \"канадец\",\r\n            \"ключица\",\r\n            \"корифей\",\r\n            \"кочегар\",\r\n            \"кружево\",\r\n            \"логотип\",\r\n            \"магистр\",\r\n            \"могилка\",\r\n            \"неверие\",\r\n            \"нечисть\",\r\n            \"плетень\",\r\n            \"подмога\",\r\n            \"придача\",\r\n            \"рентген\",\r\n            \"саженец\",\r\n            \"смокинг\",\r\n            \"тупость\",\r\n            \"усопший\",\r\n            \"устрица\",\r\n            \"фарисей\",\r\n            \"шпилька\",\r\n            \"ящерица\",\r\n            \"ведущая\",\r\n            \"водолаз\",\r\n            \"вылазка\",\r\n            \"лексема\",\r\n            \"майонез\",\r\n            \"наводка\",\r\n            \"ночевка\",\r\n            \"палитра\",\r\n            \"парторг\",\r\n            \"причуда\",\r\n            \"реагент\",\r\n            \"садовод\",\r\n            \"халтура\",\r\n            \"цигарка\",\r\n            \"аттитюд\",\r\n            \"афганец\",\r\n            \"горчица\",\r\n            \"домишко\",\r\n            \"доплата\",\r\n            \"изнанка\",\r\n            \"изумруд\",\r\n            \"именины\",\r\n            \"инициал\",\r\n            \"искорка\",\r\n            \"лазарет\",\r\n            \"ледокол\",\r\n            \"махорка\",\r\n            \"несение\",\r\n            \"одессит\",\r\n            \"ошейник\",\r\n            \"получка\",\r\n            \"поршень\",\r\n            \"прорубь\",\r\n            \"ребятки\",\r\n            \"ссадина\",\r\n            \"стояние\",\r\n            \"ублюдок\",\r\n            \"эротика\",\r\n            \"абрикос\",\r\n            \"аграрий\",\r\n            \"апофеоз\",\r\n            \"блатной\",\r\n            \"геноцид\",\r\n            \"главком\",\r\n            \"дикость\",\r\n            \"домысел\",\r\n            \"идиллия\",\r\n            \"кухарка\",\r\n            \"моллюск\",\r\n            \"молочко\",\r\n            \"натяжка\",\r\n            \"обелиск\",\r\n            \"обертка\",\r\n            \"патефон\",\r\n            \"пейджер\",\r\n            \"перышко\",\r\n            \"печенка\",\r\n            \"плавник\",\r\n            \"профком\",\r\n            \"пылинка\",\r\n            \"ракетка\",\r\n            \"рассада\",\r\n            \"рукоять\",\r\n            \"седьмая\",\r\n            \"тропарь\",\r\n            \"шалость\",\r\n            \"шипение\",\r\n            \"эстонец\",\r\n            \"болячка\",\r\n            \"вареник\",\r\n            \"верзила\",\r\n            \"гильдия\",\r\n            \"донышко\",\r\n            \"дочурка\",\r\n            \"задачка\",\r\n            \"затяжка\",\r\n            \"зимовка\",\r\n            \"известь\",\r\n            \"малютка\",\r\n            \"манекен\",\r\n            \"меценат\",\r\n            \"мурашки\",\r\n            \"нажатие\",\r\n            \"накидка\",\r\n            \"пансион\",\r\n            \"прорезь\",\r\n            \"реквием\",\r\n            \"речушка\",\r\n            \"сарказм\",\r\n            \"фюзеляж\",\r\n            \"аптечка\",\r\n            \"балаган\",\r\n            \"берлога\",\r\n            \"бородач\",\r\n            \"высылка\",\r\n            \"горстка\",\r\n            \"капелла\",\r\n            \"крупица\",\r\n            \"лимонад\",\r\n            \"маринад\",\r\n            \"онанизм\",\r\n            \"отчизна\",\r\n            \"просека\",\r\n            \"разброс\",\r\n            \"реалист\",\r\n            \"сибиряк\",\r\n            \"теплица\",\r\n            \"торпеда\",\r\n            \"торпедо\",\r\n            \"эрекция\",\r\n            \"бальзам\",\r\n            \"бегемот\",\r\n            \"врачиха\",\r\n            \"высотка\",\r\n            \"гадание\",\r\n            \"газетка\",\r\n            \"гвоздик\",\r\n            \"гудение\",\r\n            \"густота\",\r\n            \"детеныш\",\r\n            \"животик\",\r\n            \"малышка\",\r\n            \"маникюр\",\r\n            \"марафон\",\r\n            \"метанол\",\r\n            \"милочка\",\r\n            \"наречие\",\r\n            \"негатив\",\r\n            \"ноутбук\",\r\n            \"нянечка\",\r\n            \"обмотка\",\r\n            \"обшивка\",\r\n            \"околица\",\r\n            \"петлица\",\r\n            \"поступь\",\r\n            \"правнук\",\r\n            \"пуговка\",\r\n            \"риэлтор\",\r\n            \"рогатка\",\r\n            \"соломка\",\r\n            \"столбец\",\r\n            \"трясина\",\r\n            \"абсолют\",\r\n            \"блестка\",\r\n            \"веление\",\r\n            \"горесть\",\r\n            \"гортань\",\r\n            \"деточка\",\r\n            \"диалект\",\r\n            \"дилемма\",\r\n            \"живость\",\r\n            \"завиток\",\r\n            \"заминка\",\r\n            \"крахмал\",\r\n            \"кулуары\",\r\n            \"метание\",\r\n            \"обслуга\",\r\n            \"парапет\",\r\n            \"реферат\",\r\n            \"связной\",\r\n            \"скверик\",\r\n            \"солярка\",\r\n            \"ставень\",\r\n            \"хворост\",\r\n            \"береста\",\r\n            \"бочонок\",\r\n            \"букетик\",\r\n            \"вазочка\",\r\n            \"вермахт\",\r\n            \"вотчина\",\r\n            \"дискета\",\r\n            \"козерог\",\r\n            \"кочерга\",\r\n            \"мигалка\",\r\n            \"новатор\",\r\n            \"огласка\",\r\n            \"партиец\",\r\n            \"побоище\",\r\n            \"практик\",\r\n            \"происки\",\r\n            \"ремарка\",\r\n            \"рецидив\",\r\n            \"семестр\",\r\n            \"триллер\",\r\n            \"царевна\",\r\n            \"эмитент\",\r\n            \"анархия\",\r\n            \"баланда\",\r\n            \"барокко\",\r\n            \"беготня\",\r\n            \"задумка\",\r\n            \"закалка\",\r\n            \"издевка\",\r\n            \"клубень\",\r\n            \"кузница\",\r\n            \"лазейка\",\r\n            \"лебедка\",\r\n            \"лилипут\",\r\n            \"манжета\",\r\n            \"мотылек\",\r\n            \"наколка\",\r\n            \"обрезок\",\r\n            \"пекарня\",\r\n            \"передок\",\r\n            \"питерец\",\r\n            \"прореха\",\r\n            \"пятерня\",\r\n            \"слякоть\",\r\n            \"стратег\",\r\n            \"сухость\",\r\n            \"тигрица\",\r\n            \"трагизм\",\r\n            \"тушение\",\r\n            \"черепок\",\r\n            \"чужбина\",\r\n            \"бахрома\",\r\n            \"визитер\",\r\n            \"кофейня\",\r\n            \"гадалка\",\r\n            \"малышок\",\r\n            \"биограф\",\r\n            \"лодочка\",\r\n            \"перелив\",\r\n            \"гармонь\",\r\n            \"сатирик\",\r\n            \"сынишка\",\r\n            \"форвард\",\r\n            \"форпост\",\r\n            \"билетик\",\r\n            \"воронок\",\r\n            \"седмица\",\r\n            \"ведерко\",\r\n            \"вещичка\",\r\n            \"заплата\",\r\n            \"огрызок\",\r\n            \"хохолок\"\r\n        ]\r\n    }\r\n};\r\n","<div class=\"popup\" on:click>\r\n    <div class=\"wrapper\">\r\n        <slot></slot>\r\n    </div>\r\n</div>\r\n\r\n<style>\r\n    .popup {\r\n        position: absolute;\r\n        left: 0;\r\n        top: 0;\r\n        right: 0;\r\n        bottom: 0;\r\n        background-color: rgba(44, 44, 44, 0.85);\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        justify-content: center;\r\n    }\r\n\r\n    .wrapper {\r\n        background-color: #2c2c2c;\r\n        color: #b4b4b4;\r\n        padding: 10vw;\r\n        margin: 5vw;\r\n        border: 3px solid #646464;\r\n    }\r\n</style>","<script>\r\n    import Popup from \"./Popup.svelte\";\r\n    import {model} from \"./model\";\r\n    import Button from \"./Button.svelte\";\r\n\r\n    export let locale = {};\r\n\r\n    $: formatted = ($model.messageArgs || []).reduce((m, p, i) => m.replace(`$${i}`, p), locale[$model.message]);\r\n\r\n    function handleClick() {\r\n        model.set($model.clearMessage())\r\n    }\r\n</script>\r\n\r\n{#if $model.message}\r\n    <Popup on:click={handleClick}>\r\n        <div class=\"window\">\r\n            {formatted}\r\n        </div>\r\n        <div class=\"button\">\r\n            <Button on:click={handleClick}>{locale.ok}</Button>\r\n        </div>\r\n    </Popup>\r\n{/if}\r\n\r\n<style>\r\n    .button {\r\n        text-align: center;\r\n        margin-top: 5vh;\r\n    }\r\n</style>","<script>\r\n    import Popup from \"./Popup.svelte\";\r\n    import {kStatusAbsent, kStatusCorrect, kStatusMisplaced, model} from \"./model\";\r\n    import Button from \"./Button.svelte\";\r\n\r\n    export let locale = {};\r\n\r\n    function handleNextGameClick() {\r\n        model.set($model.init($model.guessedWord.length, $model.field.length, $model.difficulty))\r\n    }\r\n</script>\r\n\r\n{#if $model.victory || $model.defeat}\r\n    <Popup>\r\n        <div class=\"window\">\r\n            <div class=\"title\">{$model.victory ? locale.victory : locale.defeat}</div>\r\n            {#if $model.victory}\r\n                <table>\r\n                    {#each $model.field as row, j}\r\n                        {#if j <= $model.currentRow}\r\n                            <tr>\r\n                                {#each row as c, i}\r\n                                    <td\r\n                                            class:absent=\"{$model.status[j][i] === kStatusAbsent}\"\r\n                                            class:misplaced={$model.status[j][i] === kStatusMisplaced}\r\n                                            class:correct={$model.status[j][i] === kStatusCorrect}>{c}</td>\r\n                                {/each}\r\n                            </tr>\r\n                        {/if}\r\n                    {/each}\r\n                </table>\r\n                <div>{locale.averageTries}<span class=\"tries\">{$model.averageTries.toFixed(2)}</span></div>\r\n            {/if}\r\n            {#if $model.defeat}\r\n                <div>{locale.guessedWord}</div>\r\n                <table>\r\n                    <tr>\r\n                        {#each $model.guessedWord as c}\r\n                            <td class=\"correct defeat-word\">{c}</td>\r\n                        {/each}\r\n                    </tr>\r\n                </table>\r\n            {/if}\r\n            <div class=\"button\">\r\n                <Button on:click={handleNextGameClick}>{locale.nextGame}</Button>\r\n            </div>\r\n        </div>\r\n    </Popup>\r\n{/if}\r\n\r\n<style>\r\n    .window {\r\n        display: flex;\r\n        align-items: center;\r\n        flex-direction: column;\r\n        font-size: 2vh;\r\n    }\r\n\r\n    .title {\r\n        font-size: 4vh;\r\n        color: #5694b9;\r\n        padding-bottom: 2vh;\r\n    }\r\n\r\n    .absent {\r\n        background-color: #3d4042;\r\n    }\r\n\r\n    .misplaced {\r\n        background-color: #8a6d34;\r\n    }\r\n\r\n    .correct {\r\n        background-color: #52642b;\r\n    }\r\n\r\n    td {\r\n        height: 3vh;\r\n        width: 3vh;\r\n        text-align: center;\r\n        vertical-align: middle;\r\n        text-transform: uppercase;\r\n    }\r\n\r\n    td.defeat-word {\r\n        height: 5vh;\r\n        width: 5vh;\r\n        font-size: 3.5vh;\r\n    }\r\n\r\n    .button {\r\n        margin-top: 6vh;\r\n    }\r\n\r\n    .title, .tries {\r\n        font-size: 4vh;\r\n        color: #5694b9;\r\n    }\r\n</style>","<script>\r\n    import {kScreenGame, kScreenHelp, model} from \"./model\";\r\n    import Button from \"./Button.svelte\";\r\n\r\n    export let locale;\r\n\r\n    function handleClick() {\r\n        model.set($model.setScreen(kScreenGame))\r\n    }\r\n</script>\r\n\r\n{#if $model.screen === kScreenHelp}\r\n    <div class=\"help\">\r\n        <div class=\"title\">{locale.title}</div>\r\n        <div>\r\n            {#each locale.help as l}\r\n                {@html l}\r\n            {/each}\r\n        </div>\r\n        <Button on:click={handleClick}>{locale.play}</Button>\r\n    </div>\r\n{/if}\r\n\r\n<style>\r\n    .help {\r\n        width: 100%;\r\n        height: 100%;\r\n        box-sizing: border-box;\r\n\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        justify-content: space-around;\r\n\r\n        background-color: #2c2c2c;\r\n        color: #b4b4b4;\r\n        padding: 10vw;\r\n    }\r\n\r\n    .title {\r\n        font-size: 2.5vh;\r\n        color: #5694b9;\r\n    }\r\n\r\n    :global(.help ul) {\r\n\r\n    }\r\n\r\n    :global(.help .misplaced) {\r\n        background-color: #8a6d34;\r\n        padding: 0 0.5em;\r\n    }\r\n\r\n    :global(.help .correct) {\r\n        background-color: #52642b;\r\n        padding: 0 0.5em;\r\n    }\r\n</style>","<script>\n    import {onMount} from 'svelte';\n    import Game from \"./Game.svelte\";\n    import {createStore, kBsp, kRet, model} from \"./model\";\n    import locale from \"./ru\";\n    import MessagePopup from \"./MessagePopup.svelte\";\n    import EndGamePopup from \"./EndGamePopup.svelte\";\n    import vnd from \"./vnd\";\n    import Help from \"./Help.svelte\";\n\n    model.set(createStore(locale.dictionary, locale.keyboard).init(5, 6, 0))\n\n    function handleKeydown(e) {\n        let key = e.key;\n        if (key === \"Enter\") {\n            key = kRet;\n        } else if (key === \"Backspace\") {\n            key = kBsp;\n        }\n        model.set($model.insert(key));\n    }\n\n    onMount(async () => {\n        vnd.init();\n    })\n</script>\n\n<svelte:head>\n    <title>{locale.title}</title>\n    <meta charset=\"UTF-8\">\n    <title>Еще одно слово</title>\n    <meta name=\"keywords\" content=\"wordle, unlimited, русский, на русском, слова, игра\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no, minimal-ui\">\n    <link rel=\"stylesheet\" href=\"style.css\">\n    <!-- Yandex.Metrika counter -->\n    <script type=\"text/javascript\">\n        (function (m, e, t, r, i, k, a) {\n            m[i] = m[i] || function () {\n                (m[i].a = m[i].a || []).push(arguments)\n            };\n            m[i].l = 1 * new Date();\n            // noinspection CommaExpressionJS\n            k = e.createElement(t), a = e.getElementsByTagName(t)[0], k.async = 1, k.src = r, a.parentNode.insertBefore(k, a)\n        })\n        (window, document, \"script\", \"https://mc.yandex.ru/metrika/tag.js\", \"ym\");\n\n        ym(87246213, \"init\", {\n            clickmap: true,\n            trackLinks: true,\n            accurateTrackBounce: true\n        });\n    </script>\n    <noscript>\n        <div><img src=\"https://mc.yandex.ru/watch/87246213\" style=\"position:absolute; left:-9999px;\" alt=\"\"/></div>\n    </noscript>\n    <!-- /Yandex.Metrika counter -->\n</svelte:head>\n\n<svelte:window on:keydown={handleKeydown}/>\n\n<Game {locale} version=\"beta 16\"/>\n<Help {locale}/>\n<MessagePopup {locale}/>\n<EndGamePopup {locale}/>\n\n<style>\n    :global(body) {\n        height: 100%;\n        padding: 0;\n        margin: 0;\n        overflow: hidden;\n    }\n</style>\n","import App from './App.svelte';\nimport vnd from \"./vnd\";\n\nconst app = new App({\n    target: document.body\n});\n\nexport default app;"],"names":["this"],"mappings":"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AE;IACX,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,YAAY,OAAO;IACnB,SAAS;IACT,QAAQ,CAAC,EAAE;IACX,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,YAAY,QAAQ;IACpB,SAAS;IACT,QAAQ,CAAC,EAAE;IACX,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,YAAY,SAAS;IACrB,SAAS;IACT,KAAK;IACL,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OCj3HD,UAIM;OAHF,UAEM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wCCYW,GAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8BAKY,GAAM,IAAC,EAAE;;;;;;;;;;;qEAAT,GAAM,IAAC,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;yCAAvB,GAAW;;;;;+BAH5B,GAAS;;;;;;;;;;OADd,UAEM;;;OACN,UAEM;;;;;+EAJD,GAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;+BAHjB,GAAM,IAAC,OAAO;;;;;;;;;;;;;;;;sBAAd,GAAM,IAAC,OAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;WATJ,MAAM;;cAIR,WAAW;MAChB,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,YAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uBAH9B,SAAS,IAAI,MAAM,CAAC,WAAW,QAAQ,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,OAAO,KAAK,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;+BCwBxF,GAAM,IAAC,YAAY;;;+BAAsB,GAAM,IAAC,YAAY,CAAC,OAAO,CAAC,CAAC;;mCAbjE,GAAM,IAAC,KAAK;;;;sCAAjB,MAAI;;;;;;;;;;;;;;;;;;;;;;;OADV,UAaQ;;;;;;;OACR,UAA2F;;OAAjE,UAA2D;;;;;kCAb1E,GAAM,IAAC,KAAK;;;;qCAAjB,MAAI;;;;;;;;;;;;;;;;0CAAJ,MAAI;;;uEAaJ,GAAM,IAAC,YAAY;uEAAsB,GAAM,IAAC,YAAY,CAAC,OAAO,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;gCAVrD,GAAG;;;;sCAAR,MAAI;;;;;;;;;;;;;;;;OADV,UAOK;;;;;;;;;;+BANM,GAAG;;;;qCAAR,MAAI;;;;;;;;;;;;;;;;0CAAJ,MAAI;;;;;;;;;;;;;;;;;;;;;;;yBAI8D,GAAC;;;;;;;;6CAF1C,GAAM,IAAC,MAAM,OAAC,GAAC,WAAE,GAAC,UAAM,aAAa;gDACnC,GAAM,IAAC,MAAM,OAAC,GAAC,WAAE,GAAC,UAAM,gBAAgB;8CAC1C,GAAM,IAAC,MAAM,OAAC,GAAC,WAAE,GAAC,UAAM,cAAc;;;;OAH7D,UAGuE;;;;gEAAP,GAAC;;;8CAF1C,GAAM,IAAC,MAAM,OAAC,GAAC,WAAE,GAAC,UAAM,aAAa;;;;iDACnC,GAAM,IAAC,MAAM,OAAC,GAAC,WAAE,GAAC,UAAM,gBAAgB;;;;+CAC1C,GAAM,IAAC,MAAM,OAAC,GAAC,WAAE,GAAC,UAAM,cAAc;;;;;;;;;;;;;;;;;;;;;;0BANpE,GAAC,kBAAI,GAAM,IAAC,UAAU;;;;;;;;;;;;iBAAtB,GAAC,kBAAI,GAAM,IAAC,UAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;+BAe7B,GAAM,IAAC,WAAW;;;;;iCAGT,GAAM,IAAC,WAAW;;;;oCAAvB,MAAI;;;;;;;;;;;;;;;;;;;;;OAHd,UAA+B;;;OAC/B,UAMQ;OALJ,UAIK;;;;;;;uEANH,GAAM,IAAC,WAAW;;;gCAGT,GAAM,IAAC,WAAW;;;;mCAAvB,MAAI;;;;;;;;;;;;;;;;wCAAJ,MAAI;;;;;;;;;;;;;;;;;;;;;;;;;yBAC+B,GAAC;;;;;;;;;;;OAAlC,UAAwC;;;;gEAAP,GAAC;;;;;;;;;;;;;;;;;;;;8BAMN,GAAM,IAAC,QAAQ;;;;;;;;;;;qEAAf,GAAM,IAAC,QAAQ;;;;;;;;;;;;;;;;;;;;;;;gCA7BvC,GAAM,IAAC,OAAO;kBAAG,GAAM,IAAC,OAAO;kBAAG,GAAM,IAAC,MAAM;;;;;;;;;gCAC9D,GAAM,IAAC,OAAO;gCAiBd,GAAM,IAAC,MAAM;;;;;;;;;;iDAWI,GAAmB;;;;;;;;;;;;;;;;;;;;;;OA9B7C,UAgCM;OA/BF,UAA0E;;;;;;;OA4B1E,UAEM;;;;;8FA9Bc,GAAM,IAAC,OAAO;oBAAG,GAAM,IAAC,OAAO;oBAAG,GAAM,IAAC,MAAM;;sBAC9D,GAAM,IAAC,OAAO;;;;;;;;;;;;;sBAiBd,GAAM,IAAC,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gCArBzB,GAAM,IAAC,OAAO,eAAI,GAAM,IAAC,MAAM;;;;;;;;;;;;;;;;sBAA/B,GAAM,IAAC,OAAO,eAAI,GAAM,IAAC,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;WAPrB,MAAM;;cAER,mBAAmB;MACxB,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,UAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;+BCKnE,GAAM,IAAC,KAAK;;;;;;;iCAErB,GAAM,IAAC,IAAI;;;;oCAAhB,MAAI;;;;;;;;;;;;yCAIQ,GAAW;;;;;;;;;;;;;;;;;;;;;;;OAPjC,UAQM;OAPF,UAAuC;;;OACvC,UAIM;;;;;;;;;;;qFALc,GAAM,IAAC,KAAK;;;gCAErB,GAAM,IAAC,IAAI;;;;mCAAhB,MAAI;;;;;;;;;;;;;;;;wCAAJ,MAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2BACK,GAAC;;;;;;;;;;;;;;oEAAD,GAAC;;;;;;;;;;;;;;;;;;;;;8BAGgB,GAAM,IAAC,IAAI;;;;;;;;;;;qEAAX,GAAM,IAAC,IAAI;;;;;;;;;;;;;;;;;;;;;+BAR9C,GAAM,IAAC,MAAM,KAAK,WAAW;;;;;;;;;;;;;;;;sBAA7B,GAAM,IAAC,MAAM,KAAK,WAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;WAPnB,MAAM;;cAER,WAAW;MAChB,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,WAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oCCqBlC,MAAM,CAAC,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OACpB,UAAsB;OAEtB,UAAoF;OACpF,UAAoG;OACpG,UAAwC;OAExC,UAgBS;;;;;;;;;;;;kEAOc,GAAa;;;;;gFA9B5B,MAAM,CAAC,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAlBpB,KAAK,CAAC,GAAG,CAAC,WAAW,CAAC,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;;cAE7D,aAAa,CAAC,CAAC;UAChB,GAAG,GAAG,CAAC,CAAC,GAAG;;UACX,GAAG,KAAK,OAAO;OACf,GAAG,GAAG,IAAI;iBACH,GAAG,KAAK,WAAW;OAC1B,GAAG,GAAG,IAAI;;;MAEd,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG;;;KAG/B,OAAO;MACH,GAAG,CAAC,IAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBX,UAAC,GAAG,GAAG,IAAI,GAAG,CAAC;IACpB,IAAI,MAAM,EAAE,QAAQ,CAAC,IAAI;IACzB,CAAC;;;;;;;;"}